%%%
%This file is autogenerated by the processor at: 11:21:30 of Friday, 22.03.2024 (GMT+3)
%%%

#l1  s[type=decl]\np : lf  --> s[type=imp] : \ lf . imp (lf interlocutor) <372039, 1.0>
#l2  s[type=decl]\np : lf  --> s[type=decl] : \ lf . lf interlocutor <632944, 1.0>
abc | np :: np[agr=3,count=sg] : abc <33726, 1.0>
abcs | pln :: np[agr=3,count=pl] : pl abc <29667, 1.0>
about | pre :: pp[prep=about]/np : \ x . about x <371502, 1.0>
absolutely | adv :: predp/^predp : \ x . x absolutely <689658, 1.0>
accident | np :: np[agr=3,count=sg] : accident <68935, 1.0>
a | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . a x <197768, 1.0>
after | adv :: s[type=decl]/^s : \ x . after x <613466, 1.0>
after-all | conj :: s[type=decl]/^s : \ x . after-all x <486147, 1.0>
after | pre :: (s[type=decl]\s)/np : \ x . \ y . y (after x) <793889, 1.0>
afterwards | adv :: s[type=decl]\^s : \ x . x afterwards <314158, 1.0>
again | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x again y <375049, 1.0>
again | expr :: s : again <408206, 1.0>
ahead | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x ahead y <643741, 1.0>
airplane | np :: np[agr=3,count=sg] : airplane <338423, 1.0>
al-bl-cl | np :: np[agr=3] : al-bl-cl <220159, 1.0>
all | adj :: np/^np : \ x . all x <785385, 1.0>
all | adj :: np\^np : \ x . all x <901991, 1.0>
allgone | predp :: predp : allgone <623047, 1.0>
all-the-same | predp :: predp : all-the-same <914654, 1.0>
almost | adv :: predp/^predp : \ x . x almost <674215, 1.0>
almost | expr :: s : almost <995603, 1.0>
al | np :: np[agr=3,count=sg] : al <305923, 1.0>
alone | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x alone y <656377, 1.0>
along | pre :: pp[prep=along] : along <575286, 1.0>
already | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x already y <170724, 1.0>
already | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x already y <261490, 1.0>
already | expr :: s : already <553979, 1.0>
alright | predp :: predp : alright <658987, 1.0>
am | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <535411, 1.0>
am | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <376859, 1.0>
am | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . y x <228591, 1.0>
am | copv> :: (s[type=q]/predp)/np[agr=1,count=sg] : \ x . \ y . q y x <551896, 1.0>
am | copv> :: (s[type=decl]\np[agr=1,count=sg])/np : \ x . \ y . x y <543066, 1.0>
am | copv> :: (s[type=decl]\np[agr=1,count=sg])/predp : \ x . \ y . x y <748103, 1.0>
am | copv> :: s[type=decl]\np[agr=1,count=sg] : \ x . x <834576, 1.0>
and | conj :: (np\np)/^np : \ x . \ y . and (x y) <65265, 1.0>
and | conj :: np/^np : \ x . and x <622514, 1.0>
and | conj :: s[type=decl]/^s : \ x . and x <665593, 1.0>
and | conj :: (@x\@x)/@x : \ p . \ q . \ x . and (p x) (q x) <303432, 1.0>
an | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . an x <622356, 1.0>
animals | pln :: np[agr=3,count=pl] : pl animal <732864, 1.0>
another | det :: np/np : \ x . another x <375679, 1.0>
answer | tv> :: (s[type=decl]\np)/np : \ x . \ y . answer x y <560357, 1.0>
any | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . any x <669134, 1.0>
anymore | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x anymore y <677081, 1.0>
anything | np :: np[agr=3] : anything <614844, 1.0>
apart | pre :: pp[prep=apart] : apart <692643, 1.0>
apple | np :: np[agr=3,count=sg] : apple <745798, 1.0>
apples | pln :: np[agr=3,count=pl] : pl apple <571582, 1.0>
apple-trees | pln :: np[agr=3,count=pl] : pl apple-tree <586131, 1.0>
are | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <894215, 1.0>
are | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <645039, 1.0>
are | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . y x <185059, 1.0>
are | copv> :: (s[type=decl]/np)/np : \ x . \ y . y x <13525, 1.0>
are | copv> :: (s[type=q]/np)/np : \ x . \ y . q y x <701557, 1.0>
are | copv> :: s[type=q]/np : \ x . q x <205922, 1.0>
are | copv> :: (s[type=q]/predp)/np : \ x . \ y . q y x <104511, 1.0>
are | copv> :: (s[type=decl]\np)/np : \ x . \ y . x y <703284, 1.0>
are | copv> :: (s[type=decl]\np)/predp : \ x . \ y . x y <989680, 1.0>
are | copv> :: s[type=decl]\np : \ x . x <821636, 1.0>
arm | np :: np[agr=3,count=sg] : arm <243172, 1.0>
around | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x around y <197162, 1.0>
around | pre :: pp[prep=around] : around <235952, 1.0>
ashtray | np :: np[agr=3,count=sg] : ashtray <462099, 1.0>
ask | tv> :: (s[type=decl]\np)/np : \ x . \ y . ask x y <704140, 1.0>
ate | tv2> :: (s[type=decl]\np)/np : \ x . \ y . eat x y <913712, 1.0>
at | pre :: pp[prep=at]/np : \ x . at x <783144, 1.0>
at | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (at x) z <903062, 1.0>
awake | predp :: predp : awake <329264, 1.0>
away | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x away y <506661, 1.0>
away | pre :: pp[prep=away] : away <525911, 1.0>
awfully | adv :: @x/@x : \ x . x awfully <472913, 1.0>
awful | predp :: predp : awful <338283, 1.0>
awhile | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x awhile y <949874, 1.0>
baabaablacksheep | pn :: np[agr=3] : baabaablacksheep <997453, 1.0>
baby-doll | np :: np[agr=3,count=sg] : baby-doll <683289, 1.0>
baby-noise | np :: np[agr=3,count=sg] : baby-noise <939182, 1.0>
baby | np :: np[agr=3,count=sg] : baby <276315, 1.0>
baby-sister | np :: np[agr=3,count=sg] : baby-sister <556648, 1.0>
back | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x back y <384226, 1.0>
back | np :: np[agr=3,count=sg] : back <161089, 1.0>
back | pre :: pp[prep=back] : back <973754, 1.0>
backwards | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x backwards y <762731, 1.0>
bacon | un :: np[agr=3] : bacon <410348, 1.0>
bag | np :: np[agr=3,count=sg] : bag <597674, 1.0>
ball | np :: np[agr=3,count=sg] : ball <371990, 1.0>
balloon | np :: np[agr=3,count=sg] : balloon <703337, 1.0>
banana | np :: np[agr=3,count=sg] : banana <474468, 1.0>
bandaid | np :: np[agr=3,count=sg] : bandaid <345425, 1.0>
bang | tv> :: (s[type=decl]\np)/np : \ x . \ y . bang x y <916388, 1.0>
banjo | np :: np[agr=3,count=sg] : banjo <883913, 1.0>
bank | np :: np[agr=3,count=sg] : bank <993820, 1.0>
barefoot | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x barefoot y <207512, 1.0>
barking | iving> :: s[type=decl]\np : \ x . bark x <401147, 1.0>
baseball-coin | np :: np[agr=3,count=sg] : baseball-coin <326976, 1.0>
baseball | np :: np[agr=3,count=sg] : baseball <632448, 1.0>
basement | np :: np[agr=3,count=sg] : basement <300592, 1.0>
bath-mat | np :: np[agr=3,count=sg] : bath-mat <627759, 1.0>
bath | np :: np[agr=3,count=sg] : bath <583494, 1.0>
bathrobe | np :: np[agr=3,count=sg] : bathrobe <725788, 1.0>
bathtub | np :: np[agr=3,count=sg] : bathtub <360654, 1.0>
beach | np :: np[agr=3,count=sg] : beach <893567, 1.0>
bead | np :: np[agr=3,count=sg] : bead <366032, 1.0>
beads | pln :: np[agr=3,count=pl] : pl bead <529916, 1.0>
beans | pln :: np[agr=3,count=pl] : pl bean <482459, 1.0>
bear | np :: np[agr=3,count=sg] : bear <859956, 1.0>
beautiful | adj :: np/^np : \ x . beautiful x <37282, 1.0>
because | conj :: s[type=decl]/^np : \ x . because x <413604, 1.0>
because | conj :: s[type=decl]/^s : \ x . because x <207646, 1.0>
becky | pn :: np[agr=3] : becky <516270, 1.0>
be | copv> :: (s[type=decl]\np)/np : \ x . \ y . be x y <286313, 1.0>
be | copv> :: (s[type=decl]\np)/predp : \ x . \ y . be x y <851624, 1.0>
be | copv> :: s[type=decl]\np : \ x . be x <758589, 1.0>
bed | np :: np[agr=3,count=sg] : bed <788962, 1.0>
bedroom | np :: np[agr=3,count=sg] : bedroom <859196, 1.0>
been | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . be (x y) <625958, 1.0>
before | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x before y <435047, 1.0>
before | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . y (before x) <989510, 1.0>
bell | np :: np[agr=3,count=sg] : bell <52047, 1.0>
belong | iv-in> :: (s[type=decl]\np)/pp[prep=in] : \ x . \ y . belong x y <785261, 1.0>
belong | iv-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . belong x y <939137, 1.0>
belong | iv-to> :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . belong x y <824281, 1.0>
belongs | ivs-in> :: (s[type=decl]\np[agr=3,count=sg])/pp[prep=in] : \ x . \ y . belong x y <242505, 1.0>
belongs | ivs-on> :: (s[type=decl]\np[agr=3,count=sg])/pp[prep=on] : \ x . \ y . belong x y <92347, 1.0>
belongs | ivs-to> :: (s[type=decl]\np[agr=3,count=sg])/pp[prep=to] : \ x . \ y . belong x y <890445, 1.0>
bend | iv> :: s[type=decl]\np : \ x . bend x <28303, 1.0>
benny | pn :: np[agr=3] : benny <785496, 1.0>
bent | predp-over> :: predp/pp[prep=over] : \ x . bent x <983081, 1.0>
besides | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . y (besides x) <497946, 1.0>
best | adv :: s[type=decl]\^s[type=decl] : \ x . best x <442739, 1.0>
better | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x better y <543051, 1.0>
better | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x better y <672006, 1.0>
better | predp :: predp : better <133106, 1.0>
bibbie | np :: np[agr=3,count=sg] : bibbie <576143, 1.0>
bicycle | np :: np[agr=3,count=sg] : bicycle <443823, 1.0>
big | adj :: np/^np : \ x . big x <986377, 1.0>
bigger | adj :: np/^np : \ x . bigger x <512030, 1.0>
bigger | predp :: predp : bigger <402594, 1.0>
big | predp :: predp : big <556545, 1.0>
bike | np :: np[agr=3,count=sg] : bike <334255, 1.0>
bird | np :: np[agr=3,count=sg] : bird <180573, 1.0>
birthday-cake | np :: np[agr=3,count=sg] : birthday-cake <322034, 1.0>
birthday-sandwich | np :: np[agr=3,count=sg] : birthday-sandwich <609194, 1.0>
bite | np :: np[agr=3,count=sg] : bite <324101, 1.0>
bite | tv-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . bite x y z <902471, 1.0>
bite | tv> :: (s[type=decl]\np)/np : \ x . \ y . bite x y <496266, 1.0>
bit | np :: np[agr=3,count=sg] : bit <561249, 1.0>
bit | tv2> :: (s[type=decl]\np)/np : \ x . \ y . bite x y <779763, 1.0>
blanket | np :: np[agr=3,count=sg] : blanket <57169, 1.0>
blankie | np :: np[agr=3,count=sg] : blankie <147406, 1.0>
blasting | iving> :: s[type=decl]\np : \ x . blast x <385754, 1.0>
bl | np :: s[type=decl]\^s[type=decl] : \ x . bl x <592578, 1.0>
block | np :: np[agr=3,count=sg] : block <497786, 1.0>
blocks | pln :: np[agr=3,count=pl] : pl block <369352, 1.0>
blouse | np :: np[agr=3,count=sg] : blouse <424466, 1.0>
blowing | iv-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . blow x y <17852, 1.0>
blow | iv-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . blow x y <784048, 1.0>
blow | iv> :: s[type=decl]\np : \ x . blow x <436674, 1.0>
blow | tv-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . blow x y <262689, 1.0>
blue | adj :: np/^np : \ x . blue x <521144, 1.0>
blue | predp :: predp : blue <413353, 1.0>
board | np :: np[agr=3,count=sg] : board <28819, 1.0>
boat | np :: np[agr=3,count=sg] : boat <626283, 1.0>
bone | np :: np[agr=3,count=sg] : bone <346925, 1.0>
book | np :: np[agr=3,count=sg] : book <332879, 1.0>
boom | np :: np[agr=3,count=sg] : boom <425509, 1.0>
boot | np :: np[agr=3,count=sg] : boot <542393, 1.0>
boots | pln :: np[agr=3,count=pl] : pl boot <897955, 1.0>
boston | pn :: np[agr=3] : boston <879486, 1.0>
both | det :: np\np : \ x . both x <482451, 1.0>
both | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . both x <764167, 1.0>
bottle | np :: np[agr=3,count=sg] : bottle <787797, 1.0>
bottom | np :: np[agr=3,count=sg] : bottom <329414, 1.0>
bouillon-cubes | pln :: np[agr=3,count=pl] : pl bouillon-cube <690493, 1.0>
bouillon | un :: np[agr=3] : bouillon <496298, 1.0>
bouncy | adj :: np/^np : \ x . bouncy x <323546, 1.0>
bowel-movement | np :: np[agr=3,count=sg] : bowel-movement <98764, 1.0>
bowels | pln :: np[agr=3,count=pl] : pl bowel <726786, 1.0>
bowl | np :: np[agr=3,count=sg] : bowl <728092, 1.0>
box | np :: np[agr=3,count=sg] : box <861958, 1.0>
box-top | np :: np[agr=3,count=sg] : box-top <124226, 1.0>
boy | np :: np[agr=3,count=sg] : boy <794850, 1.0>
brand-new | adj :: np/^np : \ x . brand-new x <59531, 1.0>
bread | un :: np[agr=3] : bread <481625, 1.0>
breakfast | un :: np[agr=3] : breakfast <578457, 1.0>
break | tv> :: (s[type=decl]\np)/np : \ x . \ y . break x y <354191, 1.0>
briefcase | np :: np[agr=3,count=sg] : briefcase <33692, 1.0>
bring | dv> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . bring y x z <678409, 1.0>
bringing | dving> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . bring x y z <189290, 1.0>
bringing | tving> :: (s[type=decl]\np)/np : \ x . \ y . bring x y <877019, 1.0>
bring | tv> :: (s[type=decl]\np)/np : \ x . \ y . bring x y <985804, 1.0>
bring | tv-to> :: ((s[type=decl]\np)/pp[prep=to])/np : \ x . \ y . \ z . bring x y z <720154, 1.0>
broke | tv2> :: (s[type=decl]\np)/np : \ x . \ y . break x y <113337, 1.0>
broom | np :: np[agr=3,count=sg] : broom <567576, 1.0>
brown | adj :: np/^np : \ x . brown x <410575, 1.0>
brown | predp :: predp : brown <644538, 1.0>
bubble | np :: np[agr=3,count=sg] : bubble <183643, 1.0>
bubbles | pln :: np[agr=3,count=pl] : pl bubble <896449, 1.0>
bug | np :: np[agr=3,count=sg] : bug <207420, 1.0>
building | np :: np[agr=3,count=sg] : building <627311, 1.0>
building | tving> :: (s[type=decl]\np)/np : \ x . \ y . build x y <933853, 1.0>
build | tv> :: (s[type=decl]\np)/np : \ x . \ y . build x y <968970, 1.0>
bumped | tv2-into> :: (s[type=decl]\np)/pp[prep=into] : \ x . \ y . bump x y <26208, 1.0>
bumped | tv2> :: (s[type=decl]\np)/np : \ x . \ y . bump x y <915211, 1.0>
bumps | pln :: np[agr=3,count=pl] : pl bump <116144, 1.0>
bunny | np :: np[agr=3,count=sg] : bunny <522706, 1.0>
burned | tv2> :: (s[type=decl]\np)/np : \ x . \ y . burn x y <165257, 1.0>
burped | iv2> :: s[type=decl]\np : \ x . burp x <943256, 1.0>
burp | iv> :: s[type=decl]\np : \ x . burp x <441267, 1.0>
burro | np :: np[agr=3,count=sg] : burro <655038, 1.0>
buses | pln :: np[agr=3,count=pl] : pl bus <318841, 1.0>
bus | np :: np[agr=3,count=sg] : bus <306966, 1.0>
bus-stop | np :: np[agr=3,count=sg] : bus-stop <104363, 1.0>
busy | predp :: predp : busy <55605, 1.0>
but | conj :: s[type=decl]/^s : \ x . but x <203215, 1.0>
but | pre :: (s[type=decl]\s)/np : \ x . \ y . y but x <699165, 1.0>
butterfly | np :: np[agr=3,count=sg] : butterfly <29307, 1.0>
butter | un :: np[agr=3] : butter <314070, 1.0>
button | np :: np[agr=3,count=sg] : button <504344, 1.0>
buttons | pln :: np[agr=3,count=pl] : pl button <90563, 1.0>
buy | tv> :: (s[type=decl]\np)/np : \ x . \ y . buy x y <172313, 1.0>
by | pre :: pp[prep=by] : by <133869, 1.0>
by | pre :: pp[prep=by]/np : \ x . by x <275175, 1.0>
by | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (by x) z <503514, 1.0>
cake | np :: np[agr=3,count=sg] : cake <871985, 1.0>
cake-plate | np :: np[agr=3,count=sg] : cake-plate <581911, 1.0>
called | tv2> :: (s[type=decl]\np)/np : \ x . \ y . call x y <45541, 1.0>
calling | tving> :: (s[type=decl]\np)/np : \ x . \ y . call x y <408638, 1.0>
call | tv> :: (s[type=decl]\np)/np : \ x . \ y . call x y <17399, 1.0>
cambridge | np :: np[agr=3] : cambridge <582700, 1.0>
came | iv2-back> :: (s[type=decl]\np)/pp[prep=back] : \ x . \ y . come x y <621805, 1.0>
came | iv2-off> :: (s[type=decl]\np)/pp[prep=off] : \ x . \ y . come x y <848526, 1.0>
came | iv2> :: s[type=decl]\np : \ x . come x <716078, 1.0>
came | iv2-through> :: (s[type=decl]\np)/pp[prep=through] : \ x . \ y . come x y <847529, 1.0>
camera-spool | np :: np[agr=3,count=sg] : camera-spool <808716, 1.0>
came | tv-outof> :: (s[type=decl]\np)/pp[prep=outof] : \ x . \ y . come x y <714386, 1.0>
candle | np :: np[agr=3,count=sg] : candle <561315, 1.0>
candles | pln :: np[agr=3,count=pl] : pl candle <11904, 1.0>
candy | np :: np[agr=3,count=sg] : candy <570623, 1.0>
can | mod :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . can x <584523, 1.0>
can | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . can (x y) <918271, 1.0>
can | mod :: (s[type=decl]/^(s[type=decl]\np))/np : \ x . \ y . can (y x) <980362, 1.0>
can | mod :: s[type=decl]/^np : \ x . q can x <555361, 1.0>
cannot | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . cannot (x y) <336653, 1.0>
can | np :: np[agr=3,count=sg] : can <563255, 1.0>
can | np :: np[agr=3,count=sg] : can <849559, 1.0>
cans | pln :: np[agr=3,count=pl] : pl can <386890, 1.0>
card | np :: np[agr=3,count=sg] : card <692744, 1.0>
careful | predp :: predp : careful <630280, 1.0>
care | iv> :: s[type=decl]\np : \ x . care x <523972, 1.0>
car | np :: np[agr=3,count=sg] : car <988315, 1.0>
carrot | np :: np[agr=3,count=sg] : carrot <76674, 1.0>
carrots | pln :: np[agr=3,count=pl] : pl carrot <804591, 1.0>
carry | tv> :: (s[type=decl]\np)/np : \ x . \ y . carry x y <152994, 1.0>
cart | np :: np[agr=3,count=sg] : cart <887909, 1.0>
catch | tv> :: (s[type=decl]\np)/np : \ x . \ y . catch x y <800900, 1.0>
cathy | pn :: np[agr=3] : cathy <353575, 1.0>
cathy | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p cathy <469267, 1.0>
cat | np :: np[agr=3,count=sg] : cat <432925, 1.0>
cats | pln :: np[agr=3,count=pl] : pl cat <336913, 1.0>
caught | tv2> :: (s[type=decl]\np)/np : \ x . \ y . catch x y <937655, 1.0>
celery | un :: np[agr=3] : celery <370741, 1.0>
cereal | un :: np[agr=3] : cereal <384476, 1.0>
certainly | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x certainly y <382882, 1.0>
chair | np :: np[agr=3,count=sg] : chair <345328, 1.0>
change | tv> :: (s[type=decl]\np)/np : \ x . \ y . change x y <266762, 1.0>
changing | tving> :: (s[type=decl]\np)/np : \ x . \ y . change x y <569230, 1.0>
check | np :: np[agr=3,count=sg] : check <292220, 1.0>
cheese-sandwich | np :: np[agr=3,count=sg] : cheese-sandwich <882175, 1.0>
cheese | un :: np[agr=3] : cheese <530791, 1.0>
chew | tv-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . chew x y z <741886, 1.0>
chew | tv-up> :: ((s[type=decl]\np)/pp[prep=up])/np : \ x . \ y . \ z . chew x y z <135531, 1.0>
chicago | np :: np[agr=3,count=sg] : chicago <814057, 1.0>
chicken-bone | np :: np[agr=3,count=sg] : chicken-bone <990849, 1.0>
chicks | pln :: np[agr=3,count=pl] : pl chick <683180, 1.0>
children | pln :: np[agr=3,count=pl] : pl child <136994, 1.0>
chin | np :: np[agr=3,count=sg] : chin <287340, 1.0>
chirp | iv> :: s[type=decl]\np : \ x . chirp x <334321, 1.0>
chirp | np :: np[agr=3,count=sg] : chirp <622141, 1.0>
chirps | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . chirp x <415901, 1.0>
chirps | pln :: np[agr=3,count=pl] : pl chirp <564250, 1.0>
chocolate-cookie | np :: np[agr=3,count=sg] : chocolate-cookie <816171, 1.0>
chocolate-icecream | un :: np[agr=3] : chocolate-icecream <514651, 1.0>
chocolate | un :: np[agr=3] : chocolate <744792, 1.0>
choochoo | np :: np[agr=3,count=sg] : choochoo <594391, 1.0>
clay | un :: np[agr=3] : clay <2674, 1.0>
clean | adj :: np/^np : \ x . clean x <70212, 1.0>
cleaning | un :: np[agr=3] : cleaning <384847, 1.0>
clean | predp :: predp : clean <295238, 1.0>
clean | tv-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . clean x y z <542602, 1.0>
clean | tv> :: (s[type=decl]\np)/np : \ x . \ y . clean x y <170967, 1.0>
clear | tv-out :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . clear x y z <373209, 1.0>
climb | iv-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . climb x y <23071, 1.0>
climb | iv-over> :: (s[type=decl]\np)/pp[prep=over] : \ x . \ y . climb x y <514375, 1.0>
climb | iv> :: s[type=decl]\np : \ x . climb x <408730, 1.0>
climb | tv-in> :: (s[type=decl]\np)/pp[prep=in] : \ x . \ y . climb x y <94401, 1.0>
climb | tv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . climb x y <941671, 1.0>
clipclop | pn :: np[agr=3] : clipclop <827035, 1.0>
clip | np :: np[agr=3,count=sg] : clip <977387, 1.0>
cl | np :: np[agr=3] : cl <982957, 1.0>
clock | np :: np[agr=3,count=sg] : clock <793711, 1.0>
closet | np :: np[agr=3,count=sg] : closet <27379, 1.0>
close | tv> :: (s[type=decl]\np)/np : \ x . \ y . close x y <920377, 1.0>
clown | np :: np[agr=3,count=sg] : clown <237662, 1.0>
coat | np :: np[agr=3,count=sg] : coat <663763, 1.0>
cockadoodledooo | interj :: s : cockadoodledooo <683304, 1.0>
coffee-pot | np :: np[agr=3,count=sg] : coffee-pot <805168, 1.0>
coffee | un :: np[agr=3] : coffee <981824, 1.0>
coin | np :: np[agr=3,count=sg] : coin <888624, 1.0>
cold | np :: np[agr=3,count=sg] : cold <475774, 1.0>
cold | predp :: predp : cold <620001, 1.0>
colingc | pn :: np[agr=3] : colingc <790934, 1.0>
colin | pn :: np[agr=3] : colin <865482, 1.0>
colin | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p colin <825886, 1.0>
colorado | np :: np[agr=3] : colorado <38968, 1.0>
color | iv> :: s[type=decl]\np : \ x . color x <576963, 1.0>
color | tv-in> :: ((s[type=decl]\np)/pp[prep=in])/np : \ x . \ y . \ z . color x y z <134358, 1.0>
color | tv> :: (s[type=decl]\np)/np : \ x . \ y . color x y <771137, 1.0>
come | iv-back-down> :: ((s[type=decl]\np)/pp[prep=down])/pp[prep=back] : \ x . \ y . \ z . come x y z <116529, 1.0>
come | iv-back-in> :: ((s[type=decl]\np)/pp[prep=in])/pp[prep=back] : \ x . \ y . \ z . come x y z <360344, 1.0>
come | iv-back> :: (s[type=decl]\np)/pp[prep=back] : \ x . \ y . come x y <159244, 1.0>
come | iv-in> :: (s[type=decl]\np)/pp[prep=in] : \ x . \ y . come x y <591819, 1.0>
come | iv-off> :: (s[type=decl]\np)/pp[prep=off] : \ x . \ y . come x y <358323, 1.0>
come | iv-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . come x y <743915, 1.0>
come | iv-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . come x y <16450, 1.0>
come | iv-over :: (s[type=decl]\np)/pp[prep=over] : \ x . \ y . come x y <407366, 1.0>
come | iv> :: s[type=decl]\np : \ x . come x <393291, 1.0>
comes | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . come x <792702, 1.0>
comfortable | predp :: predp : comfortable <689181, 1.0>
coming | iving-back> :: (s[type=decl]\np)/pp[prep=back] : \ x . \ y . come x y <278994, 1.0>
coming | iving-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . come x y <471919, 1.0>
coming | iving> :: s[type=decl]\np : \ x . come x <816604, 1.0>
coming | tving-back-to> :: ((s[type=decl]\np)/pp[prep=to])/pp[prep=back] : \ x . \ y . \ z . come x y z <787446, 1.0>
coming | tving-outof> :: (s[type=decl]\np)/pp[prep=outof] : \ x . \ y . come x y <312270, 1.0>
complicated | adj :: np/^np : \ x . complicated x <562140, 1.0>
cookbook | np :: np[agr=3,count=sg] : cookbook <990059, 1.0>
cookie | np :: np[agr=3,count=sg] : cookie <561393, 1.0>
cookie-press | np :: np[agr=3,count=sg] : cookie-press <10801, 1.0>
cookies | pln :: np[agr=3,count=pl] : pl cookie <349668, 1.0>
cooking | tving> :: (s[type=decl]\np)/np : \ x . \ y . cook x y <926609, 1.0>
cook | iv> :: s[type=decl]\np : \ x . cook x <797892, 1.0>
cook | np :: np[agr=3,count=sg] : cook <852044, 1.0>
cook | tv> :: (s[type=decl]\np)/np : \ x . \ y . cook x y <127409, 1.0>
coolpop | np :: np[agr=3,count=sg] : coolpop <958509, 1.0>
cool | predp :: predp : cool <516105, 1.0>
cool | tv> :: (s[type=decl]\np)/np : \ x . \ y . cool x y <135059, 1.0>
corner | np :: np[agr=3,count=sg] : corner <151058, 1.0>
couches | pln :: np[agr=3,count=pl] : pl couch <509493, 1.0>
couch | np :: np[agr=3,count=sg] : couch <984767, 1.0>
cough | np :: np[agr=3,count=sg] : cough <898563, 1.0>
could | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . could (x y) <774421, 1.0>
counter | np :: np[agr=3,count=sg] : counter <107318, 1.0>
count | tv> :: (s[type=decl]\np)/np : \ x . \ y . count x y <778669, 1.0>
cover | np :: np[agr=3,count=sg] : cover <61213, 1.0>
cow | np :: np[agr=3,count=sg] : cow <382698, 1.0>
cows | pln :: np[agr=3,count=pl] : pl cow <315506, 1.0>
cracked | tv2> :: (s[type=decl]\np)/np : \ x . \ y . crack x y <187094, 1.0>
cracker | np :: np[agr=3,count=sg] : cracker <156073, 1.0>
crackers | pln :: np[agr=3,count=pl] : pl cracker <672038, 1.0>
cracking | tving> :: (s[type=decl]\np)/np : \ x . \ y . crack x y <363171, 1.0>
crack | tv> :: (s[type=decl]\np)/np : \ x . \ y . crack x y <954978, 1.0>
crash | iv> :: s[type=decl]\np : \ x . crash x <618241, 1.0>
crayon | np :: np[agr=3,count=sg] : crayon <203850, 1.0>
crayons | pln :: np[agr=3,count=pl] : pl crayon <263720, 1.0>
cream | un :: np[agr=3] : cream <483254, 1.0>
cried | iv2> :: s[type=decl]\np : \ x . cry x <868657, 1.0>
cromer | pn :: np[agr=3] : cromer <229953, 1.0>
crying | iving> :: s[type=decl]\np : \ x . cry x <313086, 1.0>
cry | iv> :: s[type=decl]\np : \ x . cry x <724225, 1.0>
cupboard | np :: np[agr=3,count=sg] : cupboard <289173, 1.0>
cup | np :: np[agr=3,count=sg] : cup <93642, 1.0>
cups | pln :: np[agr=3,count=pl] : pl cup <178361, 1.0>
curly | adj :: np/^np : \ x . curly x <287637, 1.0>
custard | np :: np[agr=3,count=sg] : custard <597092, 1.0>
cutting | tving> :: (s[type=decl]\np)/np : \ x . \ y . cut x y <249678, 1.0>
cut | tv> :: (s[type=decl]\np)/np : \ x . \ y . cut x y <870215, 1.0>
dance | iv> :: s[type=decl]\np : \ x . dance x <639637, 1.0>
dance | np :: np[agr=3,count=sg] : dance <142159, 1.0>
dancing | iving> :: s[type=decl]\np : \ x . dance x <765323, 1.0>
danny | pn :: np[agr=3] : danny <778069, 1.0>
daughter | np :: np[agr=3,count=sg] : daughter <463497, 1.0>
daughters | pln :: np[agr=3,count=pl] : pl daughter <531310, 1.0>
'd | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . d x <746831, 1.0>
'd | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . d (x y) <331154, 1.0>
david | pn :: np[agr=3] : david <715464, 1.0>
day | np :: np[agr=3,count=sg] : day <260171, 1.0>
'd-better | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . d-better (x y) <728865, 1.0>
dear | adj :: np\^np : \ x . dear x <249245, 1.0>
dear | np :: np[agr=3,count=sg] : dear <586546, 1.0>
decorating | tving> :: (s[type=decl]\np)/np : \ x . \ y . decorate x y <732205, 1.0>
dessert | un :: np[agr=3] : dessert <101107, 1.0>
diaper | np :: np[agr=3,count=sg] : diaper <405522, 1.0>
did | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <313379, 1.0>
did | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . y x <125674, 1.0>
did | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <9744, 1.0>
did | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . y x <589167, 1.0>
did | aux :: s[type=q]/^np : \ x . q x <208279, 1.0>
did | aux> :: (s[type=q]/s)/np : \ x . \ y . q (y x) <496203, 1.0>
did | iv2> :: s[type=decl]\np : \ x . do x <713552, 1.0>
did | tv2> :: (s[type=decl]\np)/np : \ x . \ y . do x y <697795, 1.0>
difference | np :: np[agr=3,count=sg] : difference <19082, 1.0>
digging | tving> :: (s[type=decl]\np)/np : \ x . \ y . dig x y <723011, 1.0>
dinah | pn :: np[agr=3] : dinah <496174, 1.0>
dingdong-bell | np :: np[agr=3,count=sg] : dingdong-bell <547661, 1.0>
dinosaur | np :: np[agr=3,count=sg] : dinosaur <743877, 1.0>
dirt | np :: np[agr=3,count=sg] : dirt <152215, 1.0>
dirty | adj :: np/^np : \ x . dirty x <531940, 1.0>
dirty | predp :: predp : dirty <816718, 1.0>
disappointed | predp :: predp : disappointed <630221, 1.0>
dish | un :: np[agr=3] : dish <452751, 1.0>
dl-el-fl | np :: np[agr=3] : dl-el-fl <884828, 1.0>
'd-like | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . d-like (x y) <486980, 1.0>
dl | np :: np[agr=3] : dl <651596, 1.0>
do | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <659293, 1.0>
do | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <613395, 1.0>
do | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . y x <336777, 1.0>
do | dv> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . do x y z <600355, 1.0>
does | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <109609, 1.0>
does | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <219286, 1.0>
does | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . y x <298495, 1.0>
does | tv> :: (s[type=decl]\np)/np : \ x . \ y . do x y <906002, 1.0>
does | iv> :: s[type=decl]/np : \ x . do x <29883, 1.0>
doggie | np :: np[agr=3,count=sg] : doggy <215457, 1.0>
doggies | pln :: np[agr=3,count=pl] : pl doggy <684073, 1.0>
dog | np :: np[agr=3,count=sg] : dog <405336, 1.0>
doily | np :: np[agr=3,count=sg] : doily <345917, 1.0>
doing | iving> :: s[type=decl]\np : \ x . do x <751502, 1.0>
doing | tving> :: (s[type=decl]\np)/np : \ x . \ y . do x y <821330, 1.0>
doing | tving> :: s[type=decl]/np : \ x . do x you <41402, 1.0>
do | iv> :: s[type=decl]\np : \ x . do x <734624, 1.0>
dolls | pln :: np[agr=3,count=pl] : pl doll <853187, 1.0>
dolly | np :: np[agr=3,count=sg] : dolly <148156, 1.0>
dolly | pn :: np[agr=3] : dolly <679710, 1.0>
done | predp :: predp : done <702062, 1.0>
donkey | np :: np[agr=3,count=sg] : donkey <899882, 1.0>
donkeys | pln :: np[agr=3,count=pl] : pl donkey <199434, 1.0>
dooc | np :: np[agr=3] : dooc <493228, 1.0>
door | np :: np[agr=3,count=sg] : door <209996, 1.0>
doorway | np :: np[agr=3,count=sg] : doorway <633931, 1.0>
do | tv> :: (s[type=decl]\np)/np : \ x . \ y . do x y <165091, 1.0>
do | tv> :: s[type=decl]/np : \ x . do x i <770801, 1.0>
down | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x down y <670850, 1.0>
down | np :: np : down <517520, 1.0>
down | pre :: pp[prep=down] : down <369678, 1.0>
down | pre :: pp[prep=down]/np[case=loc] : \ x . down x <938561, 1.0>
down | pre :: pp[prep=down]/np : \ x . down x <329289, 1.0>
down | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np[case=loc] : \ x . \ y . \ z . y (down x) z <156711, 1.0>
downstairs | np :: np : downstairs <435241, 1.0>
drawer | np :: np[agr=3,count=sg] : drawer <421092, 1.0>
drawing | iving> :: s[type=decl]\np : \ x . draw x <912729, 1.0>
drawing | tving> :: (s[type=decl]\np)/np : \ x . \ y . draw x y <824491, 1.0>
draw | iv> :: s[type=decl]\np : \ x . draw x <741909, 1.0>
draw | tv> :: (s[type=decl]\np)/np : \ x . \ y . draw x y <13336, 1.0>
dresses | pln :: np[agr=3,count=pl] : pl dress <801862, 1.0>
dress | np :: np[agr=3,count=sg] : dress <171006, 1.0>
drew | tv2> :: (s[type=decl]\np)/np : \ x . \ y . draw x y <622163, 1.0>
drinking | tving> :: (s[type=decl]\np)/np : \ x . \ y . drink x y <575304, 1.0>
drink | np :: np[agr=3,count=sg] : drink <447975, 1.0>
drinks | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . drink x y <987862, 1.0>
drink | tv> :: (s[type=decl]\np)/np : \ x . \ y . drink x y <835152, 1.0>
dripping | iving> :: s[type=decl]\np : \ x . drip x <842742, 1.0>
dropped | iv2> :: s[type=decl]\np : \ x . drop x <323529, 1.0>
dropped | tv2> :: (s[type=decl]\np)/np : \ x . \ y . drop x y <300976, 1.0>
drop | tv> :: (s[type=decl]\np)/np : \ x . \ y . drop x y <955530, 1.0>
drum | np :: np[agr=3,count=sg] : drum <505523, 1.0>
dry | tv> :: (s[type=decl]\np)/np : \ x . \ y . dry x y <400315, 1.0>
duck | np :: np[agr=3,count=sg] : duck <176818, 1.0>
ducks | pln :: np[agr=3,count=pl] : pl duck <770862, 1.0>
dumpty | pn :: np[agr=3] : dumpty <310234, 1.0>
dustpan | np :: np[agr=3,count=sg] : dustpan <252869, 1.0>
early | predp :: predp : early <623681, 1.0>
ear | np :: np[agr=3,count=sg] : ear <741079, 1.0>
ears | pln :: np[agr=3,count=pl] : pl ear <134090, 1.0>
easier | predp :: predp : easier <742775, 1.0>
eaten | tv3> :: (s[type=decl]\np)/np : \ x . \ y . eat x y <575078, 1.0>
eating | iving> :: s[type=decl]\np : \ x . eat x <482411, 1.0>
eating | tving> :: (s[type=decl]\np)/np : \ x . \ y . eat x y <967392, 1.0>
eat | iv> :: s[type=decl]\np : \ x . eat x <841824, 1.0>
eats | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . eat x <127165, 1.0>
eats | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . eat x y <924356, 1.0>
eat | tv> :: (s[type=decl]\np)/np : \ x . \ y . eat x y <15441, 1.0>
eat | tv-up> :: ((s[type=decl]\np)/pp[prep=up])/np : \ x . \ y . \ z . eat x y z <501350, 1.0>
eggnog | np :: np[agr=3,count=sg] : eggnog <181540, 1.0>
egg | np :: np[agr=3,count=sg] : egg <777498, 1.0>
eh | interj :: s[type=decl]/s : \ x . x <27910, 1.0>
either | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x either y <658730, 1.0>
elbow | np :: np[agr=3,count=sg] : elbow <41077, 1.0>
elephant | np :: np[agr=3,count=sg] : elephant <197274, 1.0>
else | adj :: @x\@x : \ x . x else <628734, 1.0>
el-vl-el | interj :: s : el-vl-el <29556, 1.0>
emerson | pn :: np[agr=3] : emerson <11803, 1.0>
empty | adj :: np/^np : \ x . empty x <270942, 1.0>
emptying | tving> :: (s[type=decl]\np)/np : \ x . \ y . empty x y <32401, 1.0>
empty | predp :: predp : empty <800581, 1.0>
end | np :: np[agr=3,count=sg] : end <363131, 1.0>
england | np :: np[agr=3] : england <175176, 1.0>
enough | predp :: predp : enough <691169, 1.0>
envelope | np :: np[agr=3,count=sg] : envelope <875012, 1.0>
eraser | np :: np[agr=3,count=sg] : eraser <264831, 1.0>
evecummings | pn :: np[agr=3] : evecummings <503776, 1.0>
eve | pn :: np[agr=3] : eve <180547, 1.0>
ever | adv :: s[type=decl]\^s : \ x . x ever <277955, 1.0>
eve | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p eve <465823, 1.0>
everybody | np :: np[agr=3] : everybody <700997, 1.0>
everyday | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x everyday y <328640, 1.0>
everything | np :: np[agr=3] : everything <304431, 1.0>
exactly | adv :: @x/@x : \ x . x exactly <955213, 1.0>
excuse | tv> :: (s[type=decl]\np)/np : \ x . \ y . excuse x y <533612, 1.0>
exercise | np :: np[agr=3,count=sg] : exercise <776127, 1.0>
exeter | pn :: np[agr=3] : exeter <934600, 1.0>
eyebrows | pln :: np[agr=3,count=pl] : pl eyebrow <388945, 1.0>
eye | np :: np[agr=3,count=sg] : eye <768340, 1.0>
eyes | pln :: np[agr=3,count=pl] : pl eye <927859, 1.0>
face | np :: np[agr=3,count=sg] : face <378315, 1.0>
falling | iving> :: s[type=decl]\np : \ x . fall x <986264, 1.0>
falling | iv-off> :: (s[type=decl]\np)/pp[prep=off] : \ x . \ y . fall x y <174246, 1.0>
falling | tv-off> :: (s[type=decl]\np)/pp[prep=off] : \ x . \ y . fall x y <776359, 1.0>
fall | iv> :: s[type=decl]\np : \ x . fall x <587267, 1.0>
family | np :: np[agr=3,count=sg] : family <509016, 1.0>
fan | np :: np[agr=3,count=sg] : fan <368003, 1.0>
fans | pln :: np[agr=3,count=pl] : pl fan <372236, 1.0>
far | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x far y <419824, 1.0>
fast | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x fast y <615017, 1.0>
fat | adj :: np/^np : \ x . fat x <984925, 1.0>
feed | tv> :: (s[type=decl]\np)/np : \ x . \ y . feed x y <945177, 1.0>
feet | np :: np[agr=3,count=sg] : feet <157734, 1.0>
fell | iv2> :: s[type=decl]\np : \ x . fall x <794147, 1.0>
fell | iv-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . fall x y <299861, 1.0>
fell | iv-off> :: (s[type=decl]\np)/pp[prep=off] : \ x . \ y . fall x y <2297, 1.0>
fell | tv-off> :: (s[type=decl]\np)/pp[prep=off] : \ x . \ y . fall x y <426268, 1.0>
find | dv> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . find x y z <769767, 1.0>
find | tv> :: (s[type=decl]\np)/np : \ x . \ y . find x y <227847, 1.0>
fine | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x fine y <757384, 1.0>
fine | predp :: predp : fine <846554, 1.0>
fingernail | np :: np[agr=3,count=sg] : fingernail <292019, 1.0>
finger | np :: np[agr=3,count=sg] : finger <256387, 1.0>
fingers | pln :: np[agr=3,count=pl] : pl finger <229554, 1.0>
finished | predp :: predp : finished <984861, 1.0>
finished | predp :: predp/np : \ x . finished x <755918, 1.0>
finished | tv2> :: (s[type=decl]\np)/np : \ x . \ y . finish x y <340668, 1.0>
finish | iv> :: s[type=decl]\np : \ x . finish x <870894, 1.0>
finish | tv> :: (s[type=decl]\np)/np : \ x . \ y . finish x y <411168, 1.0>
fire | np :: np[agr=3,count=sg] : fire <716043, 1.0>
fireplace | np :: np[agr=3,count=sg] : fireplace <792388, 1.0>
firetruck | np :: np[agr=3,count=sg] : firetruck <727632, 1.0>
first | adj :: np/^np : \ x . first x <539449, 1.0>
first | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x first y <88170, 1.0>
first | conj :: s[type=decl]/^s : \ x . first x <25129, 1.0>
fish | np :: np[agr=3,count=sg] : fish <497161, 1.0>
fish | pln :: np[agr=3,count=pl] : pl fish <667775, 1.0>
fixed | tv2> :: (s[type=decl]\np)/np : \ x . \ y . fix x y <745343, 1.0>
fixing | tving> :: (s[type=decl]\np)/np : \ x . \ y . fix x y <621440, 1.0>
fix | tv> :: (s[type=decl]\np)/np : \ x . \ y . fix x y <620612, 1.0>
fizzie | pn :: np[agr=3] : fizzie <49607, 1.0>
fizzing | iving> :: s[type=decl]\np : \ x . fizz x <55067, 1.0>
flipflop | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x flipflop y <772799, 1.0>
fl | np :: np[agr=3] : fl <283935, 1.0>
floor | np :: np[agr=3,count=sg] : floor <996989, 1.0>
flower | np :: np[agr=3,count=sg] : flower <285745, 1.0>
flowers | pln :: np[agr=3,count=pl] : pl flower <122105, 1.0>
flying | iving> :: s[type=decl]\np : \ x . fly x <22359, 1.0>
fly | np :: np[agr=3,count=sg] : fly <149841, 1.0>
folding | tving> :: (s[type=decl]\np)/np : \ x . \ y . fold x y <900751, 1.0>
fold | tv-over> :: ((s[type=decl]\np)/pp[prep=over])/np : \ x . \ y . \ z . fold x y z <922770, 1.0>
fold | tv> :: (s[type=decl]\np)/np : \ x . \ y . fold x y <942352, 1.0>
food | np :: np[agr=3,count=sg] : food <441987, 1.0>
foot | np :: np[agr=3,count=sg] : foot <179167, 1.0>
forget | tv> :: (s[type=decl]\np)/np : \ x . \ y . forget x y <914505, 1.0>
forgot | tv2> :: (s[type=decl]\np)/np : \ x . \ y . forget x y <329661, 1.0>
fork | np :: np[agr=3,count=sg] : fork <224031, 1.0>
for | pre :: (np\np)/np : \ x . \ y . y (for x) <311341, 1.0>
for | pre :: pp[prep=for]/np : \ x . for x <676748, 1.0>
for | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (for x) z <27262, 1.0>
for | pre :: (s[type=decl]/s)/np : \ x . \ y . y (for x) <591555, 1.0>
found | tv2> :: (s[type=decl]\np)/np : \ x . \ y . find x y <188460, 1.0>
fox | np :: np[agr=3,count=sg] : fox <962515, 1.0>
fraser | pn :: np[agr=3] : fraser <303380, 1.0>
fraser | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p fraser <693331, 1.0>
friend | np :: np[agr=3,count=sg] : friend <177415, 1.0>
friends | pln :: np[agr=3,count=pl] : pl friend <838072, 1.0>
froggy | pn :: np[agr=3] : froggy <768005, 1.0>
from | pre :: pp[prep=from]/np : \ x . from x <453039, 1.0>
from | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (from x) z <550834, 1.0>
front | np :: np[agr=3,count=sg] : front <937210, 1.0>
frosty | pn :: np[agr=3] : frosty <783528, 1.0>
frostythesnowman | pn :: np[agr=3] : frostythesnowman <600496, 1.0>
fruit | np :: np[agr=3,count=sg] : fruit <410937, 1.0>
funnels | pln :: np[agr=3,count=pl] : pl funnel <620044, 1.0>
fun | np :: np[agr=3,count=sg] : fun <347603, 1.0>
funny | adj :: np/^np : \ x . funny x <20165, 1.0>
funny | predp :: predp : funny <428419, 1.0>
fun | predp :: predp : fun <350564, 1.0>
furniture | np :: np[agr=3,count=sg] : furniture <158217, 1.0>
game | np :: np[agr=3,count=sg] : game <666371, 1.0>
garage | np :: np[agr=3,count=sg] : garage <300449, 1.0>
garbage | np :: np[agr=3,count=sg] : garbage <960824, 1.0>
gas-man | np :: np[agr=3,count=sg] : gas-man <259012, 1.0>
gate | np :: np[agr=3,count=sg] : gate <834378, 1.0>
gave | dv2> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . give x y z <531021, 1.0>
getting | diving> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . get x y z <429687, 1.0>
getting | tving-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . get x y z <288418, 1.0>
getting | tving> :: (s[type=decl]\np)/np : \ x . \ y . get x y <656283, 1.0>
get | tv-in> :: ((s[type=decl]\np)/pp[prep=in])/np : \ x . \ y . \ z . get x y z <655248, 1.0>
get | tv-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . get x y z <540213, 1.0>
get | tv-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . get x y <148863, 1.0>
get | tv> :: (s[type=decl]\np)/np : \ x . \ y . get x y <140470, 1.0>
gimme | tv> :: (s[type=decl]\np)/np : \ x . \ y . gimme x y <495652, 1.0>
giraffe | np :: np[agr=3,count=sg] : giraffe <872282, 1.0>
girl | np :: np[agr=3,count=sg] : girl <966023, 1.0>
give | dv> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . give x y z <400847, 1.0>
giving | dving> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . give x y z <352837, 1.0>
glad | predp :: predp : glad <360224, 1.0>
glasses | pln :: np[agr=3,count=pl] : pl glass <947085, 1.0>
glass | np :: np[agr=3,count=sg] : glass <993619, 1.0>
gloria | pn :: np[agr=3] : gloria <149216, 1.0>
goat | np :: np[agr=3,count=sg] : goat <715695, 1.0>
god | pn :: np[agr=3] : god <644256, 1.0>
goes | iv-in> :: (s[type=decl]\np)/pp[prep=in] : \ x . \ y . go x y <585629, 1.0>
goes | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . go x <194677, 1.0>
goes | tv> :: (s[type=decl]\np[agr=3,count=sg])/s : \ x . \ y . say x y <840668, 1.0>
going | iving-along> :: (s[type=decl]\np)/pp[prep=along] : \ x . \ y . go x y <286629, 1.0>
going | iving-around> :: (s[type=decl]\np)/pp[prep=around] : \ x . \ y . go x y <601223, 1.0>
going | iving-away> :: (s[type=decl]\np)/pp[prep=away] : \ x . \ y . go x y <843209, 1.0>
going | iving-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . go x y <341200, 1.0>
going | iving-for> :: (s[type=decl]\np)/pp[prep=for] : \ x . \ y . go x y <757907, 1.0>
going | iving-into> :: (s[type=decl]\np)/pp[prep=into] : \ x . \ y . go x y <974593, 1.0>
going | iving-round> :: (s[type=decl]\np)/pp[prep=round] : \ x . \ y . go x y <398470, 1.0>
going | iving> :: s[type=decl]\np : \ x . go x <863387, 1.0>
going | iving-to> :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . go x y <232380, 1.0>
going-to | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . gng (x y) <699990, 1.0>
go | iv-away> :: (s[type=decl]\np)/pp[prep=away] : \ x . \ y . go x y <74496, 1.0>
go | iv-back> :: (s[type=decl]\np)/pp[prep=back] : \ x . \ y . go x y <519862, 1.0>
go | iv-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . go x y <421802, 1.0>
go | iv-in> :: (s[type=decl]\np)/pp[prep=in] : \ x . \ y . go x y <558551, 1.0>
go | iv-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . go x y <693281, 1.0>
go | iv> :: s[type=decl]\np : \ x . go x <125216, 1.0>
go | iv-to> :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . go x y <958377, 1.0>
go | iv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . go x y <731884, 1.0>
goldfish | np :: np[agr=3,count=sg] : goldfish <326941, 1.0>
goldrush | pn :: np[agr=3] : goldrush <871070, 1.0>
gone | iv3-away> :: (s[type=decl]\np)/pp[prep=away] : \ x . \ y . go x y <342234, 1.0>
gone | predp :: predp : gone <576369, 1.0>
gonna | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . gng (x y) <798870, 1.0>
good | adj :: np/^np : \ x . good x <32303, 1.0>
good-day-eve | s :: s : good-day-eve <730725, 1.0>
good | np :: np[agr=3,count=sg] : good <543560, 1.0>
good | predp :: predp : good <707597, 1.0>
goose | np :: np[agr=3,count=sg] : goose <18574, 1.0>
gopher | np :: np[agr=3,count=sg] : gopher <433044, 1.0>
gordon | pn :: np[agr=3] : gordon <50869, 1.0>
got | tv2-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . get x y z <989402, 1.0>
got | tv2> :: (s[type=decl]\np)/np : \ x . \ y . get x y <950661, 1.0>
got | tv-on> :: ((s[type=decl]\np)/pp[prep=on])/np : \ x . \ y . \ z . get x y z <853767, 1.0>
go | tv> :: (s[type=decl]\np)/np[case=loc] : \ x . \ y . go x y <488124, 1.0>
go | tv> :: (s[type=decl]\np)/(s[type=decl]\np) : \ x . \ y . go (x y) y <289191, 1.0>
go | tv> :: (s[type=decl]\np)/s : \ x . \ y . say x y <387711, 1.0>
grahamcracker | np :: np[agr=3,count=sg] : grahamcracker <802658, 1.0>
grandpa | pn :: np[agr=3] : grandpa <181910, 1.0>
granma | pn :: np[agr=3] : granma <399482, 1.0>
granny | pn :: np[agr=3] : granny <851195, 1.0>
grape-juice | un :: np[agr=3] : grape-juice <82984, 1.0>
grape | np :: np[agr=3,count=sg] : grape <143392, 1.0>
gravy | un :: np[agr=3] : gravy <92208, 1.0>
greatly | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x greatly y <322782, 1.0>
great | predp :: predp : great <400182, 1.0>
green | adj :: np/^np : \ x . green x <684067, 1.0>
green | predp :: predp : green <43338, 1.0>
green | un :: np[agr=3] : green <94650, 1.0>
growing | iving> :: s[type=decl]\np : \ x . grow x <594717, 1.0>
grownups | pln :: np[agr=3,count=pl] : pl grownup <185441, 1.0>
gruyere-cheese | un :: np[agr=3] : gruyere-cheese <550199, 1.0>
guess | iv> :: s[type=decl]\np : \ x . guess x <122376, 1.0>
gun | np :: np[agr=3,count=sg] : gun <304846, 1.0>
had | tv2> :: (s[type=decl]\np)/np : \ x . \ y . have x y <412955, 1.0>
haha | interj :: s[type=decl]/s : \ x . x <514385, 1.0>
haircut | np :: np[agr=3,count=sg] : haircut <812323, 1.0>
hair | un :: np[agr=3] : hair <194937, 1.0>
hamburger | np :: np[agr=3,count=sg] : hamburger <294416, 1.0>
hammer | np :: np[agr=3,count=sg] : hammer <228556, 1.0>
ham | np :: np[agr=3,count=sg] : ham <735490, 1.0>
hand | np :: np[agr=3,count=sg] : hand <641100, 1.0>
hands | pln :: np[agr=3,count=pl] : pl hand <234293, 1.0>
hangnail | np :: np[agr=3,count=sg] : hangnail <937050, 1.0>
happened | iv2-to> :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . happen x y <522945, 1.0>
happening | iving> :: s[type=decl]\np : \ x . happen x <893787, 1.0>
happiness | un :: np[agr=3] : happiness <25716, 1.0>
happy | predp :: predp : happy <809347, 1.0>
hard | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x hard y <802924, 1.0>
hard | expr :: s : hard <275411, 1.0>
has | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <272756, 1.0>
has | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <875865, 1.0>
has | tv-on> :: ((s[type=decl]\np[agr=3,count=sg])/pp[prep=on])/np : \ x . \ y . \ z . have x y z <819387, 1.0>
has | tv> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . have x y <204623, 1.0>
hat | np :: np[agr=3,count=sg] : hat <286376, 1.0>
hats | pln :: np[agr=3,count=pl] : pl hat <609987, 1.0>
have | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <100273, 1.0>
have | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <3648, 1.0>
have | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . y x <958008, 1.0>
have | tv-on> :: ((s[type=decl]\np)/pp[prep=on])/np : \ x . \ y . \ z . have x y z <926884, 1.0>
have | tv> :: (s[type=decl]\np)/np : \ x . \ y . have x y <442552, 1.0>
having | tving> :: (s[type=decl]\np)/np : \ x . \ y . have x y <809003, 1.0>
hay | un :: np[agr=3] : hay <244582, 1.0>
head | np :: np[agr=3,count=sg] : head <750563, 1.0>
heard | tv> :: (s[type=decl]\np)/np : \ x . \ y . hear x y <343536, 1.0>
hear | tv> :: (s[type=decl]\np)/np : \ x . \ y . hear x y <972054, 1.0>
heat | un :: np[agr=3] : heat <885410, 1.0>
heavy | predp :: predp : heavy <937418, 1.0>
helga | pn :: np[agr=3] : helga <247672, 1.0>
hello | expr :: s : hello <569284, 1.0>
help | np :: np[agr=3,count=sg] : help <266357, 1.0>
helps | tv> :: ((s[type=decl]\np[agr=3,count=sg])/(s[type=decl]\np))/np : \ x . \ y . \ z . help (y x) x z <895368, 1.0>
help | tv> :: (s[type=decl]\np)/np : \ x . \ y . help x y <57067, 1.0>
he | pro :: np[agr=3,count=sg] : he <762638, 1.0>
he | raisedpro :: s[type=decl]/(s[type=decl]\np[agr=3,count=sg]) : \ p . p he <577452, 1.0>
her | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . her x <729419, 1.0>
here | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x here y <230478, 1.0>
here | adv :: s[type=decl]\^s[type=decl] : \ y . here y <436758, 1.0>
here | interj :: s[type=decl]/s : \ x . x here <375268, 1.0>
here | np :: np[case=loc] : here <582396, 1.0>
her | pro :: np : her <914356, 1.0>
hiding | iving> :: s[type=decl]\np : \ x . hide x <893220, 1.0>
highchair | np :: np[agr=3,count=sg] : highchair <127369, 1.0>
him | pro :: np : him <437912, 1.0>
hippityhop | pn :: np[agr=3] : hippityhop <715017, 1.0>
his | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . his x <6867, 1.0>
hit | tv> :: (s[type=decl]\np)/np : \ x . \ y . hit x y <631319, 1.0>
holding | tving> :: (s[type=decl]\np)/np : \ x . \ y . hold x y <731081, 1.0>
hold | tv-off> :: (s[type=decl]\np)/pp[prep=off] : \ x . \ y . hold x y <335350, 1.0>
hold | tv> :: (s[type=decl]\np)/np : \ x . \ y . hold x y <781258, 1.0>
hole | np :: np[agr=3,count=sg] : hole <455068, 1.0>
holes | pln :: np[agr=3,count=pl] : pl hole <404571, 1.0>
horse | np :: np[agr=3,count=sg] : horse <469042, 1.0>
horsie | np :: np[agr=3] : horsie <676164, 1.0>
horsie | raisednp :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p horsies <258246, 1.0>
hot | predp :: predp : hot <694895, 1.0>
house-building | np :: np[agr=3,count=sg] : house-building <792104, 1.0>
house | np :: np[agr=3,count=sg] : house <573124, 1.0>
humm | pn :: np[agr=3] : humm <308863, 1.0>
humm | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p humm <126724, 1.0>
hummthehamster | pn :: np[agr=3] : hummthehamster <131024, 1.0>
hump | iv> :: s[type=decl]\np : \ x . hump x <900260, 1.0>
humptydumpty | pn :: np[agr=3] : humptydumpty <773827, 1.0>
hungry | predp :: predp : hungry <44308, 1.0>
hurry | iv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . hurry x y <274025, 1.0>
hurt | iv> :: s[type=decl]\np : \ x . hurt x <471507, 1.0>
hurts | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . hurt x <541357, 1.0>
hurt | tv> :: (s[type=decl]\np)/np : \ x . \ y . hurt x y <932934, 1.0>
icecream-cone | np :: np[agr=3,count=sg] : icecream-cone <453334, 1.0>
icecream | un :: np[agr=3] : icecream <704581, 1.0>
icecube | np :: np[agr=3,count=sg] : icecube <187599, 1.0>
icecubes | pln :: np[agr=3,count=pl] : pl icecube <225061, 1.0>
icecube-trays | pln :: np[agr=3,count=pl] : pl icecube-tray <180566, 1.0>
iced | adj :: np/^np : \ x . iced x <966143, 1.0>
icing | np :: np[agr=3,count=sg] : icing <241220, 1.0>
icing | tving> :: (s[type=decl]\np)/np : \ x . \ y . ice x y <13122, 1.0>
icing | un :: np[agr=3] : icing <40401, 1.0>
idea | np :: np[agr=3,count=sg] : idea <227700, 1.0>
improves | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . improve x y <272152, 1.0>
indeed | predp :: predp : indeed <683840, 1.0>
indigestion | un :: np[agr=3] : indigestion <155000, 1.0>
in | pre :: pp[prep=in] : in <836937, 1.0>
in | pre :: pp[prep=in]/np[case=loc] : \ x . in x <339838, 1.0>
in | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np[case=loc] : \ x . \ y . \ z . y (in x) z <332218, 1.0>
in | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (in x) z <187002, 1.0>
inside | np :: np : inside <819180, 1.0>
inside | pre :: pp[prep=inside]/np : \ x . inside x <724728, 1.0>
instead-of | conj :: @x/@x : \ x . instead-of x <274225, 1.0>
into | pre :: pp[prep=into]/np : \ x . into x <181128, 1.0>
into | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (into x) z <773108, 1.0>
i | pro :: np[agr=1,count=sg] : i <671073, 1.0>
i | raisedpro :: s[type=decl]/(s[type=decl]\np[agr=1,count=sg]) : \ p . p i <694943, 1.0>
ironed | tv2> :: (s[type=decl]\np)/np : \ x . \ y . iron x y <243829, 1.0>
is | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <941119, 1.0>
is | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <657853, 1.0>
is | aux :: (s[type=q]/^(s[type=decl]\np))/^np : \ x . \ y . q (y x) <309862, 1.0>
is | copv> :: (s[type=decl]/np)/np : \ x . \ y . y x <892403, 1.0>
is | copv> :: (s[type=decl]/np)/predp : \ x . \ y . x y <690133, 1.0>
is | copv> :: s[type=decl]/np : \ x . x <791498, 1.0>
is | copv> :: (s[type=decl]/pp)/np : \ x . \ y . y x <197218, 1.0>
is | copv> :: (s[type=q]/np)/np : \ x . \ y . q y x <764219, 1.0>
is | copv> :: s[type=q]/np : \ x . q x <404419, 1.0>
is | copv> :: (s[type=q]/predp)/np[agr=3,count=sg] : \ x . \ y . q y x <578993, 1.0>
is | copv> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . x y <194156, 1.0>
is | copv> :: (s[type=decl]\np[agr=3,count=sg])/predp : \ x . \ y . x y <390825, 1.0>
is | copv> :: s[type=decl]\np[agr=3,count=sg] : \ x . x <685633, 1.0>
it | pro :: np[agr=3,count=sg] : it <541322, 1.0>
it | raisedpro :: s[type=decl]/(s[type=decl]\np[agr=3,count=sg]) : \ p . p it <688177, 1.0>
its | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . its x <572843, 1.0>
itself | pro :: np[agr=3] : itself <998966, 1.0>
jacket | np :: np[agr=3,count=sg] : jacket <345072, 1.0>
jackie | pn :: np[agr=3] : jackie <667444, 1.0>
jack | pn :: np[agr=3] : jack <708196, 1.0>
jammies | pln :: np[agr=3,count=pl] : pl jammie <203309, 1.0>
jar | np :: np[agr=3,count=sg] : jar <907459, 1.0>
jello | un :: np[agr=3] : jello <451039, 1.0>
jelly | adj :: np/^np : \ x . jelly x <908792, 1.0>
jill | pn :: np[agr=3] : jill <383901, 1.0>
jim | pn :: np[agr=3] : jim <892229, 1.0>
joanne | pn :: np[agr=3] : joanne <465302, 1.0>
job | np :: np[agr=3,count=sg] : job <678419, 1.0>
john | pn :: np[agr=3] : john <19813, 1.0>
josh | pn :: np[agr=3] : josh <245128, 1.0>
judy | pn :: np[agr=3] : judy <762158, 1.0>
juice | un :: np[agr=3] : juice <678238, 1.0>
julie | pn :: np[agr=3] : julie <614349, 1.0>
jumping | iving> :: s[type=decl]\np : \ x . jump x <577587, 1.0>
jump | iv> :: s[type=decl]\np : \ x . jump x <751907, 1.0>
jump | np :: np[agr=3,count=sg] : jump <185456, 1.0>
jump | tv-off> :: (s[type=decl]\np)/pp[prep=off] : \ x . \ y . jump x y <498184, 1.0>
just | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x just y <37318, 1.0>
just | adv :: @x/@x : \ x . x <301066, 1.0>
kangaroo | np :: np[agr=3,count=sg] : kangaroo <704423, 1.0>
kathy | pn :: np[agr=3] : kathy <464998, 1.0>
keep | tv-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . keep x y z <977899, 1.0>
keep | tv-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . keep x y z <92143, 1.0>
key | np :: np[agr=3,count=sg] : key <901604, 1.0>
kind | np :: np[agr=3,count=sg] : kind <736728, 1.0>
kinds | pln :: np[agr=3,count=pl] : pl kind <535467, 1.0>
king | np :: np[agr=3,count=sg] : king <447241, 1.0>
kiss | np :: np[agr=3,count=sg] : kiss <384605, 1.0>
kiss | tv> :: (s[type=decl]\np)/np : \ x . \ y . kiss x y <727973, 1.0>
kitchen | np :: np[agr=3,count=sg] : kitchen <211397, 1.0>
kitty | np :: np[agr=3,count=sg] : kitty <174695, 1.0>
kix | pn :: np[agr=3] : kix <349803, 1.0>
kleenex | pn :: np[agr=3] : kleenex <201288, 1.0>
knee | np :: np[agr=3,count=sg] : knee <376073, 1.0>
knob | np :: np[agr=3,count=sg] : knob <150909, 1.0>
knot | np :: np[agr=3,count=sg] : knot <650708, 1.0>
know | tv> :: (s[type=decl]\np)/np : \ x . \ y . know x y <604547, 1.0>
ladybump | pn :: np[agr=3] : ladybump <951684, 1.0>
lady | np :: np[agr=3,count=sg] : lady <508229, 1.0>
lap | np :: np[agr=3,count=sg] : lap <641865, 1.0>
lassie | pn :: np[agr=3] : lassie <480012, 1.0>
lassie | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p lassie <288735, 1.0>
later | adv :: s[type=decl]/^s : \ x . x later <203173, 1.0>
later | adv :: s[type=decl]\^s : \ x . x later <331774, 1.0>
later | expr :: s : later <392718, 1.0>
laughing | iving> :: s[type=decl]\np : \ x . laugh x <781023, 1.0>
laugh | iv> :: s[type=decl]\np : \ x . laugh x <614099, 1.0>
laying | iving-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . lay x y <409145, 1.0>
laying | iving> :: s[type=decl]\np : \ x . lay x <844356, 1.0>
lay | iv-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . lay x y <493057, 1.0>
lay | iv> :: s[type=decl]\np : \ x . lay x <102331, 1.0>
leaves | pln :: np[agr=3,count=pl] : pl leaf <611230, 1.0>
leave | tv-down> :: ((s[type=decl]\np)/pp[prep=down])/np : \ x . \ y . \ z . leave x y z <658470, 1.0>
leave | tv-on> :: ((s[type=decl]\np)/pp[prep=on])/np : \ x . \ y . \ z . leave x y z <451704, 1.0>
leave | tv> :: (s[type=decl]\np)/np : \ x . \ y . leave x y <45313, 1.0>
left | adj :: np/^np : \ x . left x <825910, 1.0>
leg | np :: np[agr=3,count=sg] : leg <978664, 1.0>
lemon | np :: np[agr=3,count=sg] : lemon <738984, 1.0>
letter | np :: np[agr=3,count=sg] : letter <919338, 1.0>
letters | pln :: np[agr=3,count=pl] : pl letter <856002, 1.0>
lick | tv-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . lick x y z <678633, 1.0>
lick | tv> :: (s[type=decl]\np)/np : \ x . \ y . lick x y <404277, 1.0>
light | un :: np[agr=3] : light <292685, 1.0>
like | pre :: pp[prep=like]/np : \ x . like x <809297, 1.0>
like | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (like x) z <77322, 1.0>
like | tv> :: (s[type=decl]\np)/np : \ x . \ y . like x y <188171, 1.0>
like | tv> :: ((s[type=decl]\np)/(s[type=decl]\np))/np : \ x . \ y . \ z . like (y x) x z <213321, 1.0>
linda | pn :: np[agr=3] : linda <950616, 1.0>
lions | pln :: np[agr=3,count=pl] : pl lion <557572, 1.0>
listening | tving-to> :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . listen x y <815796, 1.0>
listens | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . listen x <693222, 1.0>
little | adj :: np/^np : \ x . little x <766329, 1.0>
lives | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . live x <364678, 1.0>
livingroom | np :: np[agr=3,count=sg] : livingroom <842499, 1.0>
lobster-salad | un :: np[agr=3] : lobster-salad <642444, 1.0>
lock | np :: np[agr=3,count=sg] : lock <576802, 1.0>
lollipop | np :: np[agr=3,count=sg] : lollipop <610880, 1.0>
long | adj :: np/^np : \ x . long x <837524, 1.0>
long | predp :: predp : long <310362, 1.0>
looked | tv2> :: (s[type=decl]\np)/np[case=loc] : \ x . \ y . look x y <754431, 1.0>
looking | iving-around> :: (s[type=decl]\np)/pp[prep=around] : \ x . \ y . look x y <11117, 1.0>
looking | iving-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . look x y <989908, 1.0>
looking | iving> :: s[type=decl]\np : \ x . look x <859032, 1.0>
looking | tving-at> :: (s[type=decl]\np)/pp[prep=at] : \ x . \ y . look x y <122026, 1.0>
look | iv> :: s[type=decl]\np : \ x . look x <568133, 1.0>
look | iv-through> :: (s[type=decl]\np)/pp[prep=through] : \ x . \ y . look x y <335342, 1.0>
looks | tvs-like> :: (s[type=decl]\np[agr=3,count=sg])/pp[prep=like] : \ x . \ y . look x y <699654, 1.0>
look | tv-at> :: (s[type=decl]\np)/pp[prep=at] : \ x . \ y . look x y <393740, 1.0>
look | tv-for> :: (s[type=decl]\np)/pp[prep=for] : \ x . \ y . look x y <294086, 1.0>
look | tv-like> :: (s[type=decl]\np)/pp[prep=like] : \ x . \ y . look x y <589271, 1.0>
look | tv> :: (s[type=decl]\np)/np[case=loc] : \ x . \ y . look x y <734142, 1.0>
look | tv> :: (s[type=decl]\np)/np : \ x . \ y . look x y <323951, 1.0>
loose | predp :: predp : loose <946916, 1.0>
lose | tv> :: (s[type=decl]\np)/np : \ x . \ y . lose x y <43941, 1.0>
lost | predp :: predp : lost <395136, 1.0>
lot | np :: np[agr=3,count=sg] : lot <33531, 1.0>
lots-of | adj :: np/^np : \ x . lots-of x <999740, 1.0>
loud | adj :: np/^np : \ x . loud x <43073, 1.0>
lovely | adj :: np/^np : \ x . lovely x <992778, 1.0>
lunch | np :: np[agr=3,count=sg] : lunch <911436, 1.0>
lunchtime | np :: np : lunchtime <319977, 1.0>
lying | iving-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . lie x y <409803, 1.0>
lying | iving-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . lie x y <122988, 1.0>
lying | iving> :: s[type=decl]\np : \ x . lie x <824728, 1.0>
maam | np :: np[agr=3,count=sg] : maam <143203, 1.0>
machine | np :: np[agr=3,count=sg] : machine <298265, 1.0>
made | tv2> :: (s[type=decl]\np)/np : \ x . \ y . make x y <549295, 1.0>
magic | un :: np[agr=3] : magic <726081, 1.0>
mailman | np :: np[agr=3,count=sg] : mailman <713191, 1.0>
make | tv> :: (s[type=decl]\np)/np : \ x . \ y . make x y <713597, 1.0>
make | tv> :: (s[type=decl]\np)/(s[type=decl]\np) : \ x . \ y . make (x y) <837638, 1.0>
making | tving> :: (s[type=decl]\np)/np : \ x . \ y . make x y <649366, 1.0>
mama | pn :: np[agr=3] : mama <932810, 1.0>
managed | iv2> :: s[type=decl]\np : \ x . manage x <30156, 1.0>
man | np :: np[agr=3,count=sg] : man <518946, 1.0>
many | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . many x <836161, 1.0>
marcia | pn :: np[agr=3] : marcia <337206, 1.0>
margaret | pn :: np[agr=3] : margaret <284625, 1.0>
market | un :: np[agr=3] : market <510123, 1.0>
matter | np :: np[agr=3,count=sg] : matter <37837, 1.0>
maybe | conj :: s[type=decl]/^s : \ x . maybe x <932678, 1.0>
maybe | expr :: s : maybe <177497, 1.0>
may | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . may (x y) <846199, 1.0>
may | mod :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . may (y x) <590037, 1.0>
mayonnaise | un :: np[agr=3] : mayonnaise <328891, 1.0>
mean | tv> :: (s[type=decl]\np)/np : \ x . \ y . mean x y <728879, 1.0>
meat | un :: np[agr=3] : meat <850527, 1.0>
medicine | un :: np[agr=3] : medicine <568216, 1.0>
meeting | iving> :: s[type=decl]\np : \ x . meet x <202096, 1.0>
melted | iv2> :: s[type=decl]\np : \ x . melt x <753665, 1.0>
melt | iv> :: s[type=decl]\np : \ x . melt x <83755, 1.0>
men | pln :: np[agr=3,count=pl] : pl man <329445, 1.0>
me | pro :: np : me <942668, 1.0>
mess | np :: np[agr=3,count=sg] : mess <80944, 1.0>
messy | adj :: np/^np : \ x . messy x <568031, 1.0>
messy | predp :: predp : messy <11063, 1.0>
might | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . might (x y) <920198, 1.0>
milk | un :: np[agr=3] : milk <643858, 1.0>
mine | np :: np[agr=3] : mine <940567, 1.0>
minute | np :: np[agr=3,count=sg] : minute <753145, 1.0>
missed | tv2> :: (s[type=decl]\np)/np : \ x . \ y . miss x y <385621, 1.0>
mistake | np :: np[agr=3,count=sg] : mistake <869800, 1.0>
mittens | pln :: np[agr=3,count=pl] : pl mitten <742414, 1.0>
mixing | tving> :: (s[type=decl]\np)/np : \ x . \ y . mix x y <281528, 1.0>
mm | interj :: s : mm <500150, 1.0>
mmo | interj :: s : mmo <750991, 1.0>
moment | np :: np[agr=3,count=sg] : moment <42752, 1.0>
momma | pn :: np[agr=3] : momma <12457, 1.0>
mommy | pn :: np[agr=3] : mommy <261979, 1.0>
mommy | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p mommy <225073, 1.0>
mom | pn :: np[agr=3] : mom <991372, 1.0>
monday | np :: np : monday <379152, 1.0>
mooo | interj :: s : mooo <263751, 1.0>
more | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . more x <171072, 1.0>
more | det :: predp/predp : \ x . more x <298583, 1.0>
morning | np :: np[agr=3,count=sg] : morning <184130, 1.0>
mouthful | np :: np[agr=3,count=sg] : mouthful <186071, 1.0>
mouth | np :: np[agr=3,count=sg] : mouth <276919, 1.0>
moved | iv2> :: s[type=decl]\np : \ x . move x <566280, 1.0>
move | iv-into> :: (s[type=decl]\np)/pp[prep=into] : \ x . \ y . move x y <991117, 1.0>
move | iv> :: s[type=decl]\np : \ x . move x <873659, 1.0>
moves | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . move x y <351502, 1.0>
move | tv-away-from> :: (((s[type=decl]\np)/pp[prep=from])/pp[prep=away])/np : \ x . \ y . \ z . \ w . move x y z w <722545, 1.0>
move | tv-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . move x y z <466065, 1.0>
move | tv> :: (s[type=decl]\np)/np[case=loc] : \ x . \ y . move x y <468800, 1.0>
move | tv> :: (s[type=decl]\np)/np : \ x . \ y . move x y <959120, 1.0>
moving | iving> :: s[type=decl]\np : \ x . move x <563014, 1.0>
moving | tving> :: (s[type=decl]\np)/np : \ x . \ y . move x y <771857, 1.0>
mud-pies | pln :: np[agr=3,count=pl] : pl mud-pie <721934, 1.0>
muffin | np :: np[agr=3,count=sg] : muffin <45662, 1.0>
mug | np :: np[agr=3,count=sg] : mug <202459, 1.0>
murray | pn :: np[agr=3] : murray <953559, 1.0>
music | un :: np[agr=3] : music <908768, 1.0>
mustache | np :: np[agr=3,count=sg] : mustache <263491, 1.0>
must | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . must (x y) <38651, 1.0>
my | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . my x <52824, 1.0>
my | x :: np : my thing <373167, 1.0>
name | np :: np[agr=3,count=sg] : name <604678, 1.0>
nancy | pn :: np[agr=3] : nancy <376222, 1.0>
nanny | pn :: np[agr=3] : nanny <969091, 1.0>
napkin | np :: np[agr=3,count=sg] : napkin <392371, 1.0>
napkins | pln :: np[agr=3,count=pl] : pl napkin <259965, 1.0>
nap | un :: np[agr=3] : nap <465029, 1.0>
natalie | pn :: np[agr=3] : natalie <970876, 1.0>
near | adj :: np/^np : \ x . near x <139108, 1.0>
necessary | predp :: predp : necessary <252450, 1.0>
needs | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . need x y <571725, 1.0>
need | tv> :: (s[type=decl]\np)/np : \ x . \ y . need x y <164337, 1.0>
neil | pn :: np[agr=3] : neil <365312, 1.0>
never | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x never y <324434, 1.0>
new | adj :: np/^np : \ x . new x <722734, 1.0>
newbrunswick | pn :: np[agr=3] : newbrunswick <445990, 1.0>
newspaper | np :: np[agr=3,count=sg] : newspaper <308744, 1.0>
next | adj :: np/^np : \ x . next x <167403, 1.0>
nice | adj :: np/^np : \ x . nice x <860956, 1.0>
nice | predp :: predp : nice <19954, 1.0>
nipple | np :: np[agr=3,count=sg] : nipple <284775, 1.0>
nobody | np :: np[agr=3] : nobody <239243, 1.0>
no | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . no x <836169, 1.0>
noel | pn :: np[agr=3] : noel <558997, 1.0>
no | expr :: s : no <296832, 1.0>
noise | np :: np[agr=3,count=sg] : noise <242375, 1.0>
noise | un :: np[agr=3] : noise <291533, 1.0>
noises | pln :: np[agr=3,count=pl] : pl noise <431995, 1.0>
noisy | predp :: predp : noisy <290292, 1.0>
noodle | np :: np[agr=3,count=sg] : noodle <249461, 1.0>
noodle-soup | un :: np[agr=3] : noodle-soup <35383, 1.0>
noodles | pln :: np[agr=3,count=pl] : pl noodle <337447, 1.0>
nose | np :: np[agr=3,count=sg] : nose <449331, 1.0>
nothing | np :: np[agr=3] : nothing <184581, 1.0>
not | neg :: (s[type=decl]\np)\(s[type=decl]\np) : \ p . \ x . not (p x) <149430, 1.0>
not | neg :: s[type=decl]\+s : \ x . not x <128481, 1.0>
not | neg :: @x/@x : \ x . not x <472025, 1.0>
now | adv :: s[type=decl]/^s : \ x . x now <444512, 1.0>
now | adv :: s[type=decl]\^s : \ x . x now <770173, 1.0>
now | adv :: @x/@x : \ x . x now <283432, 1.0>
now | np :: np : now <768023, 1.0>
numbers | pln :: np[agr=3,count=pl] : pl number <913665, 1.0>
nursery-rhyme | np :: np[agr=3,count=sg] : nursery-rhyme <767841, 1.0>
nut | np :: np[agr=3,count=sg] : nut <992666, 1.0>
nuts | pln :: np[agr=3,count=pl] : pl nut <197927, 1.0>
off | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x off y <522503, 1.0>
off | np :: np : off <347414, 1.0>
off | pre :: pp[prep=off]/np : \ x . off x <19776, 1.0>
off | pre :: pp[prep=off] : off <143531, 1.0>
off | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (off x) z <835121, 1.0>
of | pre :: pp[prep=of]/np : \ x . of x <993944, 1.0>
of | pre :: pp[prep=of] : of <235029, 1.0>
oh | interj :: s[type=decl]/s : \ x . x <139233, 1.0>
ohio | np :: np[agr=3] : ohio <782112, 1.0>
okay | predp :: predp : okay <979758, 1.0>
okkay | predp :: predp : okkay <613337, 1.0>
old | adj :: np/^np : \ x . old x <204216, 1.0>
oldmacdonald | pn :: np[agr=3] : oldmacdonald <256998, 1.0>
oldmacdonald | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p oldmacdonald <837387, 1.0>
olive | np :: np[agr=3,count=sg] : olive <683417, 1.0>
on | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x on y <461513, 1.0>
once | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x once y <136315, 1.0>
one | np :: np[agr=3] : one <126822, 1.0>
ones | pln :: np[agr=3,count=pl] : pl one <826201, 1.0>
only | adj :: np/^np : \ x . only x <887473, 1.0>
only | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x only y <911224, 1.0>
on | pre :: pp[prep=on]/np : \ x . on x <833003, 1.0>
on | pre :: pp[prep=on] : on <892889, 1.0>
on | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np[case=loc] : \ x . \ y . \ z . y (on x) z <985083, 1.0>
on | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (on x) z <20660, 1.0>
open | predp :: predp : open <226769, 1.0>
open | tv> :: (s[type=decl]\np)/np : \ x . \ y . open x y <441504, 1.0>
orange | adj :: np/^np : \ x . orange x <2328, 1.0>
orange-peel | un :: np[agr=3] : orange-peel <58402, 1.0>
or | conj :: s[type=decl]/^s : \ x . or x <461505, 1.0>
other | adj :: np/^np : \ x . other x <728573, 1.0>
our | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . our x <933430, 1.0>
out | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x out y <887835, 1.0>
outof | pre :: pp[prep=outof]/np : \ x . outof x <866388, 1.0>
outof | pre :: pp[prep=outof] : outof <653548, 1.0>
outof | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (outof x) z <452681, 1.0>
out | pre :: pp[prep=out]/np : \ x . out x <144014, 1.0>
out | pre :: pp[prep=out] : out <368770, 1.0>
out | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np[case=loc] : \ x . \ y . \ z . y (out x) z <1230, 1.0>
out | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (out x) z <850782, 1.0>
outside | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x outside y <662275, 1.0>
outside | np :: np : outside <557484, 1.0>
over | pre :: pp[prep=over]/np : \ x . over x <665079, 1.0>
over | pre :: pp[prep=over] : over <892604, 1.0>
over | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np[case=loc] : \ x . \ y . \ z . y (over x) z <286005, 1.0>
own | adj :: np/^np : \ x . own x <202380, 1.0>
paddle | np :: np[agr=3,count=sg] : paddle <959830, 1.0>
pad | np :: np[agr=3,count=sg] : pad <925242, 1.0>
page | np :: np[agr=3,count=sg] : page <82584, 1.0>
pages | pln :: np[agr=3,count=pl] : pl page <306804, 1.0>
paint | iv> :: s[type=decl]\np : \ x . paint x <40368, 1.0>
paint | tv> :: (s[type=decl]\np)/np : \ x . \ y . paint x y <913942, 1.0>
pans | pln :: np[agr=3,count=pl] : pl pan <200162, 1.0>
panties | pln :: np[agr=3,count=pl] : pl panty <260827, 1.0>
papa | pn :: np[agr=3] : papa <856683, 1.0>
papa | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p papa <911555, 1.0>
paper-bag | np :: np[agr=3,count=sg] : paper-bag <540826, 1.0>
paper-clip | np :: np[agr=3,count=sg] : paper-clip <223367, 1.0>
paper | np :: np[agr=3,count=sg] : paper <343863, 1.0>
pardon | tv> :: (s[type=decl]\np)/np : \ x . \ y . pardon x y <764387, 1.0>
parsley | un :: np[agr=3] : parsley <756980, 1.0>
particularly | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x particularly y <715329, 1.0>
part | np :: np[agr=3,count=sg] : part <78275, 1.0>
party | np :: np[agr=3,count=sg] : party <583893, 1.0>
patting | tving> :: (s[type=decl]\np)/np : \ x . \ y . pat x y <74449, 1.0>
peanutbutter-sandwich | np :: np[agr=3,count=sg] : peanutbutter-sandwich <570104, 1.0>
peanutbutter | un :: np[agr=3] : peanutbutter <787139, 1.0>
pear | np :: np[agr=3,count=sg] : pear <465, 1.0>
pears | pln :: np[agr=3,count=pl] : pl pear <100158, 1.0>
peas | pln :: np[agr=3,count=pl] : pl pea <295173, 1.0>
pedalpushers | np :: np[agr=3,count=sg] : pedalpushers <962098, 1.0>
peeking | tving-at> :: (s[type=decl]\np)/pp[prep=at] : \ x . \ y . peek x y <368584, 1.0>
peeking | tving-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . peek x y <144517, 1.0>
peek | iv-around> :: (s[type=decl]\np)/pp[prep=around] : \ x . \ y . peek x y <367350, 1.0>
peek | iv-in> :: (s[type=decl]\np)/pp[prep=in] : \ x . \ y . peek x y <222631, 1.0>
peek | iv> :: s[type=decl]\np : \ x . peek x <163773, 1.0>
peek | iv-with> :: (s[type=decl]\np)/pp[prep=with] : \ x . \ y . peek x y <907016, 1.0>
peek | tv-at> :: (s[type=decl]\np)/pp[prep=at] : \ x . \ y . peek x y <562720, 1.0>
peel | iv> :: s[type=decl]\np : \ x . peel x <550787, 1.0>
peel | tv> :: (s[type=decl]\np)/np : \ x . \ y . peel x y <141133, 1.0>
peepee | iv> :: s[type=decl]\np : \ x . peepee x <432386, 1.0>
peeping | iving-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . peep x y <631746, 1.0>
pegs | pln :: np[agr=3,count=pl] : pl peg <238885, 1.0>
pencil | np :: np[agr=3,count=sg] : pencil <747858, 1.0>
pencils | pln :: np[agr=3,count=pl] : pl pencil <512281, 1.0>
pennies | pln :: np[agr=3,count=pl] : pl penny <436368, 1.0>
pen | np :: np[agr=3,count=sg] : pen <183542, 1.0>
penny | np :: np[agr=3,count=sg] : penny <646865, 1.0>
people | pln :: np[agr=3,count=pl] : pl person <828027, 1.0>
pepper | un :: np[agr=3] : pepper <881212, 1.0>
perhaps | expr :: s : perhaps <665280, 1.0>
peter | pn :: np[agr=3] : peter <257781, 1.0>
pickle | np :: np[agr=3,count=sg] : pickle <494113, 1.0>
pick | tv-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . pick x y z <977559, 1.0>
pick | tv> :: (s[type=decl]\np)/np : \ x . \ y . pick x y <413834, 1.0>
pick | tv-up> :: ((s[type=decl]\np)/pp[prep=up])/np : \ x . \ y . \ z . pick x y z <760610, 1.0>
pick | tv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . pick x y <83066, 1.0>
picture | np :: np[agr=3,count=sg] : picture <995740, 1.0>
pictures | pln :: np[agr=3,count=pl] : pl picture <376254, 1.0>
piece | np :: np[agr=3,count=sg] : piece <599079, 1.0>
pies | pln :: np[agr=3,count=pl] : pl pie <719804, 1.0>
pillow | np :: np[agr=3,count=sg] : pillow <689696, 1.0>
pillows | pln :: np[agr=3,count=pl] : pl pillow <757390, 1.0>
pinch | tv> :: (s[type=decl]\np)/np : \ x . \ y . pinch x y <739288, 1.0>
pineapple-dessert | np :: np[agr=3,count=sg] : pineapple-dessert <342854, 1.0>
pink | adj :: np/^np : \ x . pink x <736943, 1.0>
pin | tv> :: (s[type=decl]\np)/np : \ x . \ y . pin x y <900895, 1.0>
pipe | np :: np[agr=3,count=sg] : pipe <172322, 1.0>
pitcher | np :: np[agr=3,count=sg] : pitcher <336595, 1.0>
pizzc | tv> :: (s[type=decl]\np)/np : \ x . \ y . pizzc x y <724480, 1.0>
pizzeronic | np :: np[agr=3,count=sg] : pizzeronic <630096, 1.0>
plane | np :: np[agr=3,count=sg] : plane <91154, 1.0>
playing | iving> :: s[type=decl]\np : \ x . play x <829360, 1.0>
playing | iving-with> :: (s[type=decl]\np)/pp[prep=with] : \ x . \ y . play x y <649548, 1.0>
play | iv> :: s[type=decl]\np : \ x . play x <606131, 1.0>
play | iv-with> :: (s[type=decl]\np)/pp[prep=with] : \ x . \ y . play x y <251469, 1.0>
pocket | np :: np[agr=3,count=sg] : pocket <636796, 1.0>
pockets | pln :: np[agr=3,count=pl] : pl pocket <16747, 1.0>
policeman | np :: np[agr=3,count=sg] : policeman <761817, 1.0>
popcorn | un :: np[agr=3] : popcorn <457097, 1.0>
pop | pn :: np[agr=3] : pop <507801, 1.0>
popsicle | np :: np[agr=3,count=sg] : popsicle <942461, 1.0>
pops | pn :: np[agr=3] : pops <256181, 1.0>
pottie | np :: np[agr=3,count=sg] : pottie <218514, 1.0>
pouring | tving> :: (s[type=decl]\np)/np : \ x . \ y . pour x y <951755, 1.0>
pour | tv-in :: ((s[type=decl]\np)/pp[prep=in])/np : \ x . \ y . \ z . pour x y z <256374, 1.0>
pretty | adj :: np/^np : \ x . pretty x <828283, 1.0>
probably | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x probably y <460771, 1.0>
probably | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x probably y <768713, 1.0>
probably | adv :: @x/@x : \ x . x probably <598988, 1.0>
properly | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x properly y <800638, 1.0>
pudding | un :: np[agr=3] : pudding <765449, 1.0>
pulled | tv2> :: (s[type=decl]\np)/np : \ x . \ y . pull x y <947455, 1.0>
pulling | tving-down> :: ((s[type=decl]\np)/pp[prep=down])/np : \ x . \ y . \ z . pull x y z <300685, 1.0>
pulling | tving> :: (s[type=decl]\np)/np : \ x . \ y . pull x y <179233, 1.0>
pull | tv-down> :: ((s[type=decl]\np)/pp[prep=down])/np : \ x . \ y . \ z . pull x y z <517544, 1.0>
pull | tv-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . pull x y z <916836, 1.0>
pull | tv> :: (s[type=decl]\np)/np : \ x . \ y . pull x y <159551, 1.0>
pumpkin | np :: np[agr=3,count=sg] : pumpkin <956609, 1.0>
? | pun :: s[type=q]\*s[type=q] : \ x . x <776375, 1.0>
? | pun :: s[type=q]\*np : \ x . q x <215339, 1.0>
? | pun :: s[type=q]\*s[type=decl] : \ x . q x <852572, 1.0>
pushing | tving-around> :: (s[type=decl]/pp[prep=around])/np : \ x . \ y . push x y <673075, 1.0>
pushing | tving> :: (s[type=decl]\np)/np : \ x . \ y . push x y <693448, 1.0>
push | s :: s : push <187844, 1.0>
push | tv-around> :: ((s[type=decl]\np)/pp[prep=around])/np : \ x . \ y . \ z . push x y z <646238, 1.0>
put | dv-on> :: ((s[type=decl]\np)/pp[prep=on])/np : \ x . \ y . \ z . put x y z <824456, 1.0>
put | dv> :: ((s[type=decl]\np)/np[case=loc])/np : \ x . \ y . \ z . put x y z <803728, 1.0>
putting | tv-in> :: ((s[type=decl]\np)/pp[prep=in])/np : \ x . \ y . \ z . put x y z <27418, 1.0>
putting | tv-in> :: (s[type=decl]\np)/pp[prep=in] : \ x . \ y . put x y <49068, 1.0>
putting | tv-on> :: ((s[type=decl]\np)/pp[prep=on])/np : \ x . \ y . \ z . put x y z <303491, 1.0>
put | tv3> :: (s[type=decl]\np)/np : \ x . \ y . put x y <868986, 1.0>
put | tv-away> :: ((s[type=decl]\np)/pp[prep=away])/np : \ x . \ y . \ z . put x y z <159474, 1.0>
put | tv-back-on> :: (((s[type=decl]\np)/pp[prep=on])/pp[prep=back])/np : \ x . \ y . \ z . \ w . put x y z w <554407, 1.0>
put | tv-back> :: ((s[type=decl]\np)/pp[prep=back])/np : \ x . \ y . \ z . put x y z <500385, 1.0>
put | tv-down> :: ((s[type=decl]\np)/pp[prep=down])/np : \ x . \ y . \ z . put x y z <985095, 1.0>
put | tv-in> :: ((s[type=decl]\np)/pp[prep=in])/np : \ x . \ y . \ z . put x y z <429071, 1.0>
put | tv-in> :: (s[type=decl]\np)/pp[prep=in] : \ x . \ y . put x y <569440, 1.0>
put | tv-on> :: ((s[type=decl]\np)/pp[prep=on])/np : \ x . \ y . \ z . put x y z <400032, 1.0>
put | tv-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . put x y z <994566, 1.0>
put | tv-over> :: ((s[type=decl]\np)/pp[prep=over])/np : \ x . \ y . \ z . put x y z <932850, 1.0>
put | tv> :: (s[type=decl]\np)/np : \ x . \ y . put x y <648250, 1.0>
puzzle | np :: np[agr=3,count=sg] : puzzle <2492, 1.0>
quick | expr :: s : quick <899851, 1.0>
quickly | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x quickly y <593749, 1.0>
quite | adv :: @x/@x : \ x . x <485935, 1.0>
quite | expr :: s : quite <467760, 1.0>
rabbit | np :: np[agr=3,count=sg] : rabbit <813935, 1.0>
raccoons | pln :: np[agr=3,count=pl] : pl raccoon <100629, 1.0>
racketyboom | pn :: np[agr=3] : racketyboom <677832, 1.0>
radiator | np :: np[agr=3,count=sg] : radiator <871180, 1.0>
radio | np :: np[agr=3,count=sg] : radio <658785, 1.0>
railroad | np :: np[agr=3,count=sg] : railroad <674491, 1.0>
rain | un :: np[agr=3] : rain <395703, 1.0>
raisins | pln :: np[agr=3,count=pl] : pl raisin <895814, 1.0>
rangy | pn :: np[agr=3] : rangy <703375, 1.0>
rattle | np :: np[agr=3,count=sg] : rattle <824506, 1.0>
rattles | pln :: np[agr=3,count=pl] : pl rattle <716368, 1.0>
read | dv> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . read x y z <144229, 1.0>
reading | iving> :: s[type=decl]\np : \ x . read x <217091, 1.0>
reading | tving> :: (s[type=decl]\np)/np : \ x . \ y . read x y <787702, 1.0>
read | iv-about> :: (s[type=decl]\np)/pp[prep=about] : \ x . \ y . read x y <158798, 1.0>
read | iv> :: s[type=decl]\np : \ x . read x <891348, 1.0>
read | iv-to> :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . read x y <513676, 1.0>
read | tv> :: (s[type=decl]\np)/np : \ x . \ y . read x y <859766, 1.0>
ready | predp :: predp : ready <748077, 1.0>
really | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x really y <597509, 1.0>
really | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x really y <883458, 1.0>
record | np :: np[agr=3,count=sg] : record <491639, 1.0>
red | adj :: np/^np : \ x . red x <44406, 1.0>
red | predp :: predp : red <554439, 1.0>
reel | np :: np[agr=3,count=sg] : reel <455670, 1.0>
refrigerator | np :: np[agr=3,count=sg] : refrigerator <682143, 1.0>
remember | tv> :: (s[type=decl]\np)/np : \ x . \ y . remember x y <81594, 1.0>
rest | un :: np[agr=3] : rest <615271, 1.0>
ribbon | np :: np[agr=3,count=sg] : ribbon <967748, 1.0>
rice-soup | un :: np[agr=3] : rice-soup <769326, 1.0>
rice | un :: np[agr=3] : rice <364159, 1.0>
rick | pn :: np[agr=3] : rick <482638, 1.0>
rick | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p rick <170929, 1.0>
ride | tv> :: (s[type=decl]\np)/np : \ x . \ y . ride x y <460468, 1.0>
right | adj :: np/^np : \ x . right x <246031, 1.0>
right | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x right y <431753, 1.0>
right | adv :: @x/@x : \ x . x <15237, 1.0>
right | predp :: predp : right <766630, 1.0>
ringing | iving> :: s[type=decl]\np : \ x . ring x <405937, 1.0>
ring | np :: np[agr=3,count=sg] : ring <83114, 1.0>
rockabye-baby | np :: np[agr=3] : rockabye-baby <266660, 1.0>
rockingchair | np :: np[agr=3,count=sg] : rockingchair <216637, 1.0>
rocking | tving> :: (s[type=decl]\np)/np : \ x . \ y . rock x y <401177, 1.0>
roll | tv> :: (s[type=decl]\np)/np : \ x . \ y . roll x y <717794, 1.0>
room | np :: np[agr=3,count=sg] : room <563781, 1.0>
rooster | np :: np[agr=3,count=sg] : rooster <27947, 1.0>
roosters | pln :: np[agr=3,count=pl] : pl rooster <375169, 1.0>
round | adj :: np/^np : \ x . round x <959083, 1.0>
round | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x round y <355169, 1.0>
rubber-bands | pln :: np[agr=3,count=pl] : pl rubber-band <624369, 1.0>
rubbing | tving> :: (s[type=decl]\np)/np : \ x . \ y . rub x y <935919, 1.0>
rug | np :: np[agr=3,count=sg] : rug <39607, 1.0>
ruining | tving> :: (s[type=decl]\np)/np : \ x . \ y . ruin x y <182209, 1.0>
ruko | pn :: np[agr=3] : ruko <918181, 1.0>
run | iv-back> :: (s[type=decl]\np)/pp[prep=back] : \ x . \ y . run x y <916436, 1.0>
run | iv> :: s[type=decl]\np : \ x . run x <214975, 1.0>
running | iving> :: s[type=decl]\np : \ x . run x <295677, 1.0>
said | tv2> :: (s[type=decl]\np)/s : \ x . \ y . say x y <524703, 1.0>
said | tv2> :: (s[type=decl]\np)/np : \ x . \ y . say x y <343900, 1.0>
sailboat | np :: np[agr=3,count=sg] : sailboat <898105, 1.0>
sailingboat | np :: np[agr=3,count=sg] : sailingboat <113781, 1.0>
salt | un :: np[agr=3] : salt <778106, 1.0>
sambo | pn :: np[agr=3] : sambo <968593, 1.0>
sandbox | np :: np[agr=3,count=sg] : sandbox <146854, 1.0>
sandwich | np :: np[agr=3,count=sg] : sandwich <519816, 1.0>
sandy | pn :: np[agr=3] : sandy <980980, 1.0>
sarah | pn :: np[agr=3] : sarah <979924, 1.0>
sarah | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p sarah <227545, 1.0>
sara | pn :: np[agr=3] : sara <381997, 1.0>
sara | raisedpn :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p sara <960334, 1.0>
saturday | np :: np : saturday <305355, 1.0>
saw | tv2> :: (s[type=decl]\np)/np : \ x . \ y . see x y <479569, 1.0>
saying | tving> :: (s[type=decl]\np)/np : \ x . \ y . say x y <636381, 1.0>
saying | tving> :: (s[type=decl]\np)/s : \ x . \ y . say x y <48599, 1.0>
say | tv> :: (s[type=decl]\np)/np : \ x . \ y . say x y <757898, 1.0>
say | tv> :: (s[type=decl]\np)/s : \ x . \ y . say x y <847442, 1.0>
scarf | np :: np[agr=3,count=sg] : scarf <625574, 1.0>
schroeder | pn :: np[agr=3] : schroeder <310780, 1.0>
scratch | np :: np[agr=3,count=sg] : scratch <217988, 1.0>
seat | np :: np[agr=3,count=sg] : seat <342316, 1.0>
seeds | pln :: np[agr=3,count=pl] : pl seed <934359, 1.0>
sees | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . see x y <71706, 1.0>
see | tv> :: (s[type=decl]\np)/np : \ x . \ y . see x y <348423, 1.0>
see | tv> :: (s[type=decl]\np)/s : \ x . \ y . see x y <565989, 1.0>
send | tv> :: (s[type=decl]\np)/np : \ x . \ y . send x y <108789, 1.0>
sent | dv2> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . send x y z <644535, 1.0>
sent | tv2> :: (s[type=decl]\np)/np : \ x . \ y . send x y <897816, 1.0>
shaking | tving> :: (s[type=decl]\np)/np : \ x . \ y . shake x y <500143, 1.0>
shall | mod :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . shall x <859634, 1.0>
shall | mod :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . shall (y x) <982607, 1.0>
share | tv> :: (s[type=decl]\np)/np : \ x . \ y . share x y <311856, 1.0>
sharing | tving> :: (s[type=decl]\np)/np : \ x . \ y . share x y <752932, 1.0>
sheep | np :: np[agr=3,count=sg] : sheep <429868, 1.0>
sheila | pn :: np[agr=3] : sheila <465998, 1.0>
shelf | np :: np[agr=3,count=sg] : shelf <487758, 1.0>
she | pro :: np[agr=3,count=sg] : she <37574, 1.0>
she | raisedpro :: s[type=decl]/(s[type=decl]\np[agr=3,count=sg]) : \ p . p she <136249, 1.0>
shoe | np :: np[agr=3,count=sg] : shoe <537625, 1.0>
shoes | pln :: np[agr=3,count=pl] : pl shoe <874472, 1.0>
shooting | tving> :: (s[type=decl]\np)/np : \ x . \ y . shoot x y <433210, 1.0>
shoot | tv> :: (s[type=decl]\np)/np : \ x . \ y . shoot x y <831170, 1.0>
short | adj :: np/^np : \ x . short x <102637, 1.0>
short | predp :: predp : short <832570, 1.0>
should | mod :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . should x <279349, 1.0>
should | mod :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . should (x y) <975075, 1.0>
should | mod :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . should (y x) <803281, 1.0>
shovel | np :: np[agr=3,count=sg] : shovel <916878, 1.0>
shovel | tv> :: (s[type=decl]\np)/np : \ x . \ y . shovel x y <59659, 1.0>
shoving | tving> :: (s[type=decl]\np)/np : \ x . \ y . shove x y <322370, 1.0>
shut | tv> :: (s[type=decl]\np)/np : \ x . \ y . shut x y <363529, 1.0>
sick | predp :: predp : sick <877567, 1.0>
side | np :: np[agr=3,count=sg] : side <322111, 1.0>
sideways | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x sideways y <453263, 1.0>
sign | tv> :: (s[type=decl]\np)/np : \ x . \ y . sign x y <900904, 1.0>
silly | adj :: np/^np : \ x . silly x <241470, 1.0>
silly | np :: np[agr=3,count=sg] : silly <463866, 1.0>
silly | predp :: predp : silly <552273, 1.0>
singing | tving> :: (s[type=decl]\np)/np : \ x . \ y . sing x y <554030, 1.0>
sing | iv> :: s[type=decl]\np : \ x . sing x <874638, 1.0>
sing | tv> :: (s[type=decl]\np)/np : \ x . \ y . sing x y <104455, 1.0>
sit | iv-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . sit x y <390129, 1.0>
sit | iv-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . sit x y <866340, 1.0>
sit | iv> :: s[type=decl]\np : \ x . sit x <710825, 1.0>
sit | iv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . sit x y <837221, 1.0>
sitting | iving-down> :: (s[type=decl]\np)/pp[prep=down] : \ x . \ y . sit x y <138857, 1.0>
sitting | iving> :: s[type=decl]\np : \ x . sit x <770463, 1.0>
sitting | iv-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . sit x y <466529, 1.0>
six | np :: np[agr=3,count=sg] : six <358402, 1.0>
skating | iving> :: s[type=decl]\np : \ x . skate x <733919, 1.0>
skunk | np :: np[agr=3,count=sg] : skunk <740630, 1.0>
sleeping | iving> :: s[type=decl]\np : \ x . sleep x <268180, 1.0>
sleep | iv> :: s[type=decl]\np : \ x . sleep x <614195, 1.0>
sleepy | predp :: predp : sleepy <168782, 1.0>
sleeves | pln :: np[agr=3,count=pl] : pl sleeve <663793, 1.0>
slipped | iv2> :: s[type=decl]\np : \ x . slip x <878603, 1.0>
slippers | pln :: np[agr=3,count=pl] : pl slipper <789215, 1.0>
slips | ivs-off> :: (s[type=decl]\np[agr=3,count=sg])/pp[prep=off] : \ x . \ y . slip x y <726172, 1.0>
slip | tv-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . slip x y <744588, 1.0>
sliver | np :: np[agr=3,count=sg] : sliver <504730, 1.0>
smelling | tving> :: (s[type=decl]\np)/np : \ x . \ y . smell x y <29483, 1.0>
smell | tv> :: (s[type=decl]\np)/np : \ x . \ y . smell x y <871942, 1.0>
smile | tv-at :: (s[type=decl]\np)/pp[prep=at] : \ x . \ y . smile x y <263326, 1.0>
smiling | iving> :: s[type=decl]\np : \ x . smile x <908322, 1.0>
snap | iv> :: s[type=decl]\np : \ x . snap x <384151, 1.0>
snap | tv> :: (s[type=decl]\np)/np : \ x . \ y . snap x y <776079, 1.0>
snap | un :: np[agr=3] : snap <818201, 1.0>
sneezer | pn :: np[agr=3] : sneezer <505455, 1.0>
sneezes | pln :: np[agr=3,count=pl] : pl sneeze <685424, 1.0>
sneeze | un :: np[agr=3] : sneeze <73732, 1.0>
snoopy | pn :: np[agr=3] : snoopy <772972, 1.0>
snowballs | pln :: np[agr=3,count=pl] : pl snowball <579096, 1.0>
snowman | np :: np[agr=3,count=sg] : snowman <953342, 1.0>
snow | un :: np[agr=3] : snow <584205, 1.0>
sock | np :: np[agr=3,count=sg] : sock <979218, 1.0>
sock-slippers | pln :: np[agr=3,count=pl] : pl sock-slipper <457115, 1.0>
socks | pln :: np[agr=3,count=pl] : pl sock <678951, 1.0>
so | conj :: s[type=decl]/^s : \ x . so x <143140, 1.0>
soldiers | pln :: np[agr=3,count=pl] : pl soldier <994297, 1.0>
so-long | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x so-long y <353672, 1.0>
somebody | np :: np[agr=3] : somebody <620761, 1.0>
some | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . some x <653414, 1.0>
some | pro :: np[agr=3] : some <605340, 1.0>
somersault | np :: np[agr=3,count=sg] : somersault <51168, 1.0>
something | np :: np[agr=3] : something <190679, 1.0>
sometimes | adv :: s[type=decl]/^s : \ x . x sometimes <565378, 1.0>
so-much | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . so-much x <831609, 1.0>
song | np :: np[agr=3,count=sg] : song <400516, 1.0>
soon | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x soon y <368891, 1.0>
sorely | adv :: @x/@x : \ x . x sorely <752614, 1.0>
sorry | predp :: predp : sorry <952124, 1.0>
sortof | expr :: s : sortof <793758, 1.0>
sounds | tv-like> :: (s[type=decl]\np)/pp[prep=like] : \ x . \ y . sound x y <601963, 1.0>
sound | tv-like> :: (s[type=decl]\np)/pp[prep=like] : \ x . \ y . sound x y <609135, 1.0>
soup | un :: np[agr=3] : soup <814728, 1.0>
spelling | tving> :: (s[type=decl]\np)/np : \ x . \ y . spell x y <896989, 1.0>
spells | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . spell x y <283185, 1.0>
spell | tv> :: (s[type=decl]\np)/np : \ x . \ y . spell x y <999599, 1.0>
spigot | np :: np[agr=3,count=sg] : spigot <42407, 1.0>
spilled | tv2> :: (s[type=decl]\np)/np : \ x . \ y . spill x y <552260, 1.0>
spill | tv> :: (s[type=decl]\np)/np : \ x . \ y . spill x y <687319, 1.0>
spit | tv-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . spit x y z <588610, 1.0>
spit | tv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . spit x y <154699, 1.0>
splashing | iving> :: s[type=decl]\np : \ x . splash x <400008, 1.0>
sponge | np :: np[agr=3,count=sg] : sponge <566854, 1.0>
spool | np :: np[agr=3,count=sg] : spool <612378, 1.0>
spoon | np :: np[agr=3,count=sg] : spoon <25743, 1.0>
spoons | pln :: np[agr=3,count=pl] : pl spoon <973784, 1.0>
's | pos :: (np\np)/np : \ x . \ y . x (of y) <645504, 1.0>
spot | np :: np[agr=3,count=sg] : spot <441299, 1.0>
squashing | tving> :: (s[type=decl]\np)/np : \ x . \ y . squash x y <12838, 1.0>
squeaky | adj :: np/^np : \ x . squeaky x <942230, 1.0>
squirrel | np :: np[agr=3,count=sg] : squirrel <281394, 1.0>
squirrels | pln :: np[agr=3,count=pl] : pl squirrel <176047, 1.0>
stamps | pln :: np[agr=3,count=pl] : pl stamp <302099, 1.0>
standing | iving-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . stand x y <599309, 1.0>
standing | iving> :: s[type=decl]\np : \ x . stand x <695543, 1.0>
stand | iv> :: s[type=decl]\np : \ x . stand x <792897, 1.0>
stare | tv-at> :: (s[type=decl]\np)/pp[prep=at] : \ x . \ y . stare x y <823271, 1.0>
started | tv2> :: (s[type=decl]\np)/(s[type=decl]\np) : \ x . \ y . start (x y) y <68077, 1.0>
start | iv> :: s[type=decl]\np : \ x . start x <43077, 1.0>
statue | np :: np[agr=3,count=sg] : statue <547195, 1.0>
staying | iving> :: s[type=decl]\np : \ x . stay x <778374, 1.0>
stay | iv> :: s[type=decl]\np : \ x . stay x <896673, 1.0>
stay | iv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . stay x y <45857, 1.0>
step | iv-back> :: (s[type=decl]\np)/pp[prep=back] : \ x . \ y . step x y <831492, 1.0>
step | iv-out> :: (s[type=decl]\np)/pp[prep=out] : \ x . \ y . step x y <226783, 1.0>
step | tv-outof> :: (s[type=decl]\np)/pp[prep=outof] : \ x . \ y . step x y <449285, 1.0>
stick | np :: np[agr=3,count=sg] : stick <692023, 1.0>
stick | tv-in> :: ((s[type=decl]\np)/pp[prep=in])/np : \ x . \ y . \ z . stick x y z <433542, 1.0>
still | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x still y <395402, 1.0>
still | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x still y <475170, 1.0>
stir | tv> :: (s[type=decl]\np)/np : \ x . \ y . stir x y <946229, 1.0>
stool | np :: np[agr=3,count=sg] : stool <903291, 1.0>
stop | iv> :: s[type=decl]\np : \ x . stop x <708331, 1.0>
stops | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . stop x <305258, 1.0>
stories | pln :: np[agr=3,count=pl] : pl story <15799, 1.0>
story | np :: np[agr=3,count=sg] : story <567757, 1.0>
stove | np :: np[agr=3,count=sg] : stove <496949, 1.0>
straight | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x straight y <894590, 1.0>
straighten | tv> :: (s[type=decl]\np)/np : \ x . \ y . straighten x y <226030, 1.0>
straight | predp :: predp : straight <409257, 1.0>
string | np :: np[agr=3,count=sg] : string <122465, 1.0>
stylus | np :: np[agr=3,count=sg] : stylus <920608, 1.0>
subway | np :: np[agr=3,count=sg] : subway <901385, 1.0>
subways | pln :: np[agr=3,count=pl] : pl subway <358122, 1.0>
sugar-top | np :: np[agr=3,count=sg] : sugar-top <96262, 1.0>
sugar | un :: np[agr=3] : sugar <306716, 1.0>
suitcase | np :: np[agr=3,count=sg] : suitcase <851255, 1.0>
supper | un :: np[agr=3] : supper <310710, 1.0>
sure | adv :: @x/@x : \ x . x sure <719245, 1.0>
sure | predp :: predp : sure <880336, 1.0>
sways | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . sway x <4539, 1.0>
sweater | np :: np[agr=3,count=sg] : sweater <543364, 1.0>
sweetie | np :: np[agr=3,count=sg] : sweetie <116244, 1.0>
swell | adj :: np/^np : \ x . swell x <909341, 1.0>
swim | iv> :: s[type=decl]\np : \ x . swim x <750866, 1.0>
swimming | iving> :: s[type=decl]\np : \ x . swim x <840850, 1.0>
swing | iv> :: s[type=decl]\np : \ x . swing x <165855, 1.0>
table | np :: np[agr=3,count=sg] : table <276008, 1.0>
tablet | np :: np[agr=3,count=sg] : tablet <649172, 1.0>
taffy | pn :: np[agr=3] : taffy <478111, 1.0>
tail | np :: np[agr=3,count=sg] : tail <208525, 1.0>
take | tv-along> :: ((s[type=decl]\np)/pp[prep=along])/np : \ x . \ y . \ z . take x y z <618048, 1.0>
take | tv-apart> :: ((s[type=decl]\np)/pp[prep=apart])/np : \ x . \ y . \ z . take x y z <10949, 1.0>
take | tv-away> :: ((s[type=decl]\np)/pp[prep=away])/np : \ x . \ y . \ z . take x y z <794019, 1.0>
take | tv-back> :: ((s[type=decl]\np)/pp[prep=back])/np : \ x . \ y . \ z . take x y z <805938, 1.0>
take | tv-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . take x y z <391538, 1.0>
take | tv-outof> :: ((s[type=decl]\np)/pp[prep=outof])/np : \ x . \ y . \ z . take x y z <481367, 1.0>
take | tv-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . take x y z <847448, 1.0>
take | tv> :: (s[type=decl]\np)/np : \ x . \ y . take x y <784985, 1.0>
take | tv-up> :: ((s[type=decl]\np)/pp[prep=up])/np : \ x . \ y . \ z . take x y z <804274, 1.0>
taking | tving-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . take x y z <603413, 1.0>
taking | tving> :: (s[type=decl]\np)/np : \ x . \ y . take x y <664110, 1.0>
taking | tv> :: (s[type=decl]\np)/np : \ x . \ y . take x y <853885, 1.0>
talking | iving> :: s[type=decl]\np : \ x . talk x <121258, 1.0>
talking | tving-to> :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . talk x y <521160, 1.0>
taperecorder | np :: np[agr=3,count=sg] : taperecorder <151204, 1.0>
tape | un :: np[agr=3] : tape <226258, 1.0>
tapioca | un :: np[agr=3] : tapioca <213632, 1.0>
taste | tv> :: (s[type=decl]\np)/np : \ x . \ y . taste x y <659868, 1.0>
teapot | np :: np[agr=3,count=sg] : teapot <618238, 1.0>
tears | pln :: np[agr=3,count=pl] : pl tear <60829, 1.0>
tea | un :: np[agr=3] : tea <97054, 1.0>
teddybear | np :: np[agr=3,count=sg] : teddybear <637919, 1.0>
teething | iving> :: s[type=decl]\np : \ x . teeth x <537222, 1.0>
teeth | pln :: np[agr=3,count=pl] : pl tooth <339265, 1.0>
telephone | np :: np[agr=3,count=sg] : telephone <129478, 1.0>
tell | dv-about> :: ((s[type=decl]\np)/pp[prep=about])/np : \ x . \ y . \ z . tell x y z <122938, 1.0>
tell | dv> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . tell x y z <859823, 1.0>
tell | dv> :: (((s[type=decl]\np)/(s[type=decl]\np))/np)/np : \ x . \ y . \ z . \ w . tell x (z y x) w <947079, 1.0>
tell | tv> :: (s[type=decl]\np)/np : \ x . \ y . tell x y <887603, 1.0>
tell | tv> :: ((s[type=decl]\np)/(s[type=decl]\np))/np : \ x . \ y . \ z . tell x (y x) z <673081, 1.0>
tequita | pn :: np[agr=3] : tequita <378217, 1.0>
terribly | adv :: @x/@x : \ x . x terribly <465162, 1.0>
thank | tv> :: (s[type=decl]\np)/np : \ x . \ y . thank x y <40927, 1.0>
that | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . that x <679026, 1.0>
that | det :: (s[type=decl]/(s[type=decl]\np))/np : \ x . \ p . p (that x) <360328, 1.0>
that | np :: np[agr=3] : that <913489, 1.0>
that | raisednp :: s[type=decl]/(s[type=decl]\np[agr=3]) : \ p . p that <42171, 1.0>
that | relativeclause :: (np\np)/(s[type=decl]\np) : \ x . \ y . y (x y) <142993, 1.0>
the | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . the x <588588, 1.0>
the | det :: (s[type=decl]/(s[type=decl]\np))/np : \ x . \ p . p (the x) <813353, 1.0>
their | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . their x <27426, 1.0>
them | pro :: np[agr=3] : them <461844, 1.0>
then | adv :: s[type=decl]\^s : \ x . x then <30989, 1.0>
then | adv :: s[type=decl]/^s : \ x . x then <703880, 1.0>
there | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x there y <216349, 1.0>
there | adv :: s[type=decl]\^s[type=decl] : \ y . there y <258087, 1.0>
there | interj :: s[type=decl]/s : \ x . x there <23671, 1.0>
there | np :: np[case=loc] : there <788351, 1.0>
these | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . these x <967797, 1.0>
these | det :: (s[type=decl]/(s[type=decl]\np))/np : \ x . \ p . p (these x) <883316, 1.0>
these | np :: np[agr=3] : these <93684, 1.0>
they | pro :: np[agr=3,count=pl] : they <164844, 1.0>
they | raisedpro :: s[type=decl]/(s[type=decl]\np[agr=3,count=pl]) : \ p . p they <351857, 1.0>
thing | np :: np[agr=3,count=sg] : thing <788186, 1.0>
things | pln :: np[agr=3,count=pl] : pl thing <727311, 1.0>
think | tv-of> :: ((s[type=decl]\np)/np)/pp[prep=of] : \ x . \ y . \ z . think x y z <211570, 1.0>
thirsty | predp :: predp : thirsty <372384, 1.0>
this | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . this x <260413, 1.0>
this | det :: (s[type=decl]/(s[type=decl]\np))/np : \ x . \ p . p (this x) <561512, 1.0>
this | np :: np[agr=3] : this <141065, 1.0>
those | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . those x <372606, 1.0>
those | np :: np[agr=3] : those <854211, 1.0>
though | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x though y <790287, 1.0>
three-o-clock | np :: np : three-o-clock <211055, 1.0>
threw | tv-away> :: ((s[type=decl]\np)/pp[prep=away])/np : \ x . \ y . \ z . throw x y z <722739, 1.0>
through | pre :: pp[prep=through]/np[case=loc] : \ x . through x <151852, 1.0>
through | pre :: pp[prep=through]/np : \ x . through x <340737, 1.0>
throwing | tving> :: (s[type=decl]\np)/np : \ x . \ y . throw x y <102705, 1.0>
throw | tv-away> :: ((s[type=decl]\np)/pp[prep=away])/np : \ x . \ y . \ z . throw x y z <121065, 1.0>
throw | tv> :: (s[type=decl]\np)/np : \ x . \ y . throw x y <466522, 1.0>
thumb | np :: np[agr=3,count=sg] : thumb <6737, 1.0>
tie | tv> :: (s[type=decl]\np)/np : \ x . \ y . tie x y <455537, 1.0>
tie | tv-up> :: ((s[type=decl]\np)/pp[prep=up])/np : \ x . \ y . \ z . tie x y z <931546, 1.0>
tie | tv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . tie x y <627972, 1.0>
tiger | np :: np[agr=3,count=sg] : tiger <281817, 1.0>
time | un :: np[agr=3] : time <389668, 1.0>
timmy | pn :: np[agr=3] : timmy <417683, 1.0>
timothy | pn :: np[agr=3] : timothy <721647, 1.0>
tinkertoy-can | np :: np[agr=3,count=sg] : tinkertoy-can <592337, 1.0>
tinkertoy | np :: np[agr=3,count=sg] : tinkertoy <808607, 1.0>
tinkertoys | pln :: np[agr=3,count=pl] : pl tinkertoy <432210, 1.0>
tired | predp :: predp : tired <419632, 1.0>
today | adv :: s[type=decl]\^s : \ x . x today <889117, 1.0>
today | np :: np : today <507840, 1.0>
toe | np :: np[agr=3,count=sg] : toe <501002, 1.0>
toes | pln :: np[agr=3,count=pl] : pl toe <839482, 1.0>
together | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x together y <102295, 1.0>
told | dv2> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . tell x y z <986171, 1.0>
tomatoes | pln :: np[agr=3,count=pl] : pl tomato <642249, 1.0>
tomato | np :: np[agr=3,count=sg] : tomato <846016, 1.0>
tomato-sandwich | np :: np[agr=3,count=sg] : tomato-sandwich <110931, 1.0>
tomato-soup | un :: np[agr=3] : tomato-soup <188752, 1.0>
tomorrow | adv :: s[type=decl]\^s : \ x . x tomorrow <69457, 1.0>
tomorrow | adv :: s[type=decl]/^s : \ x . x tomorrow <74009, 1.0>
tomorrow | np :: np : tomorrow <824907, 1.0>
tongue | np :: np[agr=3,count=sg] : tongue <855402, 1.0>
tonight | adv :: s[type=decl]/^s : \ x . x tonight <86961, 1.0>
tonight | np :: np : tonight <59105, 1.0>
too | adv :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x too y <225275, 1.0>
too | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x too y <997329, 1.0>
too | adv :: @x/@x : \ x . x <510465, 1.0>
too | adv :: @x\@x : \ x . x too <178957, 1.0>
took | tv2-out> :: ((s[type=decl]\np)/pp[prep=out])/np : \ x . \ y . \ z . take x y z <867192, 1.0>
took | tv2> :: (s[type=decl]\np)/np : \ x . \ y . take x y <532959, 1.0>
took | tv-outof> :: ((s[type=decl]\np)/pp[prep=outof])/np : \ x . \ y . \ z . take x y z <833802, 1.0>
top | np :: np[agr=3] : top <963392, 1.0>
to | pre :: pp[prep=to]/np : \ x . to x <122891, 1.0>
to | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (to x) z <776384, 1.0>
top | tv> :: (s[type=decl]\np)/np : \ x . \ y . top x y <674897, 1.0>
tore | iv2> :: s[type=decl]\np : \ x . tear x <240320, 1.0>
tore | tv2> :: (s[type=decl]\np)/np : \ x . \ y . tear x y <18975, 1.0>
touch | iv> :: s[type=decl]\np : \ x . touch x <427575, 1.0>
touch | tv> :: (s[type=decl]\np)/np : \ x . \ y . touch x y <208254, 1.0>
towels | pln :: np[agr=3,count=pl] : pl towel <155832, 1.0>
tower | np :: np[agr=3,count=sg] : tower <451431, 1.0>
to | x :: (s[type=decl]\np)/(s[type=decl]\np) : \ p . \ x . p x <48577, 1.0>
to | x :: ((s[type=decl]\np)\(s[type=decl]\np))/(s[type=decl]\np) : \ x . \ y . \ z . y (x z) z <287207, 1.0>
to | x :: (s[type=decl]/s)/(s[type=decl]\np) : \ x . \ y . aim x y <70305, 1.0>
toy | np :: np[agr=3,count=sg] : toy <180067, 1.0>
toys | pln :: np[agr=3,count=pl] : pl toy <223470, 1.0>
track | np :: np[agr=3,count=sg] : track <494928, 1.0>
trade | tv> :: (s[type=decl]\np)/np : \ x . \ y . trade x y <759664, 1.0>
train | np :: np[agr=3,count=sg] : train <946493, 1.0>
trash | un :: np[agr=3] : trash <6436, 1.0>
tree | np :: np[agr=3,count=sg] : tree <436396, 1.0>
tripped | iv2-over :: (s[type=decl]\np)/pp[prep=over] : \ x . \ y . trip x y <35141, 1.0>
trouble | np :: np[agr=3,count=sg] : trouble <211245, 1.0>
truck | np :: np[agr=3,count=sg] : truck <348336, 1.0>
true | predp :: predp : true <859028, 1.0>
trying | iving> :: s[type=decl]\np : \ x . try x <781180, 1.0>
trying | tving> :: (s[type=decl]\np)/np : \ x . \ y . try x y <684250, 1.0>
trying | tv> :: (s[type=decl]\np)/(s[type=decl]\np) : \ x . \ y . try (x y) y <204564, 1.0>
try | iv> :: s[type=decl]\np : \ x . try x <128767, 1.0>
tummy | np :: np[agr=3,count=sg] : tummy <321510, 1.0>
tunnel | np :: np[agr=3,count=sg] : tunnel <790046, 1.0>
turning | tving> :: (s[type=decl]\np)/np : \ x . \ y . turn x y <295468, 1.0>
turn | iv-around> :: (s[type=decl]\np)/pp[prep=around] : \ x . \ y . turn x y <856968, 1.0>
turn | iv-over> :: (s[type=decl]\np)/pp[prep=over] : \ x . \ y . turn x y <977178, 1.0>
turn | iv> :: s[type=decl]\np : \ x . turn x <24216, 1.0>
turn | np :: np[agr=3,count=sg] : turn <997254, 1.0>
turn | tv-around> :: ((s[type=decl]\np)/pp[prep=around])/np : \ x . \ y . \ z . turn x y z <689089, 1.0>
turn | tv> :: (s[type=decl]\np)/np : \ x . \ y . turn x y <855092, 1.0>
turtle | np :: np[agr=3,count=sg] : turtle <567774, 1.0>
twist | tv> :: (s[type=decl]\np)/np : \ x . \ y . twist x y <448068, 1.0>
umbrella | np :: np[agr=3,count=sg] : umbrella <906337, 1.0>
under | pre :: pp[prep=under]/np : \ x . under x <246760, 1.0>
under | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np[case=loc] : \ x . \ y . \ z . y (under x) z <852287, 1.0>
understand | tv> :: (s[type=decl]\np)/np : \ x . \ y . understand x y <602399, 1.0>
understand | tv> :: (s[type=decl]\np)/s : \ x . \ y . understand x y <853089, 1.0>
unhappy | predp :: predp : unhappy <870075, 1.0>
up | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x up y <429414, 1.0>
up | np :: np : up <758218, 1.0>
up | pre :: pp[prep=up]/np[case=loc] : \ x . up x <524407, 1.0>
up | pre :: pp[prep=up]/np : \ x . up x <448450, 1.0>
up | pre :: pp[prep=up] : up <255825, 1.0>
up | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np[case=loc] : \ x . \ y . \ z . y (up x) z <525396, 1.0>
upstairs | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x upstairs y <313605, 1.0>
upstairs | np :: np : upstairs <44155, 1.0>
used | tv2> :: (s[type=decl]\np)/np : \ x . \ y . use x y <895706, 1.0>
use | tv> :: (s[type=decl]\np)/np : \ x . \ y . use x y <430672, 1.0>
using | tving> :: (s[type=decl]\np)/np : \ x . \ y . use x y <567390, 1.0>
us | pro :: np : us <290281, 1.0>
vaccine | np :: np[agr=3,count=sg] : vaccine <533673, 1.0>
valentine | pn :: np[agr=3] : valentine <808645, 1.0>
vanilla | np :: np[agr=3,count=sg] : vanilla <85030, 1.0>
vegetable-soup | un :: np[agr=3] : vegetable-soup <530535, 1.0>
very | adv :: @x/@x : \ x . x <277618, 1.0>
vitamin-time | un :: np[agr=3] : vitamin-time <586633, 1.0>
vitamin | un :: np[agr=3] : vitamin <278512, 1.0>
wagon | np :: np[agr=3,count=sg] : wagon <582411, 1.0>
wait | iv> :: s[type=decl]\np : \ x . wait x <613479, 1.0>
wait | tv-for> :: (s[type=decl]\np)/pp[prep=for] : \ x . \ y . wait x y <127041, 1.0>
wait | tv> :: (s[type=decl]\np)/np : \ x . \ y . wait x y <353248, 1.0>
wake | iv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . wake x y <442702, 1.0>
waking | iv-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . wake x y <805073, 1.0>
walking | iving> :: s[type=decl]\np : \ x . walk x <650490, 1.0>
walk | iv> :: s[type=decl]\np : \ x . walk x <60977, 1.0>
walk | np :: np[agr=3,count=sg] : walk <262192, 1.0>
wants | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . want x y <651487, 1.0>
want | tv-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . want x y z <253387, 1.0>
want | tv> :: (s[type=decl]\np)/np : \ x . \ y . want x y <705238, 1.0>
want | tv> :: ((s[type=decl]\np)/(s[type=decl]\np))/np : \ x . \ y . \ z . want (y x z) x z <567168, 1.0>
want | tv> :: ((s[type=decl]\np)/(s[type=decl]\np))/np : \ x . \ y . \ z . want (y x) x z <459305, 1.0>
warm | predp :: predp : warm <996863, 1.0>
was | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <435217, 1.0>
was | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <736849, 1.0>
was | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . y x <521510, 1.0>
was | copv2> :: (s[type=decl]/np)/np[count=sg] : \ x . \ y . y x <713026, 1.0>
was | copv2> :: (s[type=q]/np)/np[count=sg] : \ x . \ y . q y x <806508, 1.0>
was | copv2> :: (s[type=q]/predp)/np[count=sg] : \ x . \ y . q y x <136020, 1.0>
was | copv2> :: (s[type=decl]\np[count=sg])/np : \ x . \ y . x y <420573, 1.0>
was | copv2> :: (s[type=decl]\np[count=sg])/predp : \ x . \ y . x y <116897, 1.0>
was | copv2> :: s[type=decl]\np[count=sg] : \ x . x <518289, 1.0>
washed | tv2> :: (s[type=decl]\np)/np : \ x . \ y . wash x y <375573, 1.0>
washingmachine | np :: np[agr=3,count=sg] : washingmachine <311447, 1.0>
wash | tv-off :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . wash x y z <817291, 1.0>
wash | tv> :: (s[type=decl]\np)/np : \ x . \ y . wash x y <234934, 1.0>
wastebasket | np :: np[agr=3,count=sg] : wastebasket <509482, 1.0>
watching | tving> :: (s[type=decl]\np)/np : \ x . \ y . watch x y <724865, 1.0>
watch | np :: np[agr=3,count=sg] : watch <290591, 1.0>
watch | tv> :: (s[type=decl]\np)/np : \ x . \ y . watch x y <658488, 1.0>
water | un :: np[agr=3] : water <239401, 1.0>
waving | tving-to> :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . wave x y <99725, 1.0>
way | np :: np[agr=3,count=sg] : way <103565, 1.0>
wearing | tving> :: (s[type=decl]\np)/np : \ x . \ y . wear x y <734516, 1.0>
wears | tvs> :: (s[type=decl]\np[agr=3,count=sg])/np : \ x . \ y . wear x y <154119, 1.0>
wear | tv> :: (s[type=decl]\np)/np : \ x . \ y . wear x y <21998, 1.0>
wedding | np :: np[agr=3,count=sg] : wedding <249481, 1.0>
wednesday | np :: np : wednesday <346273, 1.0>
week | np :: np[agr=3,count=sg] : week <188062, 1.0>
welcome | predp :: predp : welcome <783154, 1.0>
well | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x well y <101270, 1.0>
well | interj :: s[type=decl]/s : \ x . x <617493, 1.0>
well | np :: np[agr=3,count=sg] : well <269071, 1.0>
went | iv2-for :: (s[type=decl]\np)/pp[prep=for] : \ x . \ y . go x y <541446, 1.0>
went | iv2-inside :: (s[type=decl]\np)/pp[prep=inside] : \ x . \ y . go x y <395348, 1.0>
went | iv2> :: s[type=decl]\np : \ x . go x <202793, 1.0>
went | iv2-by :: (s[type=decl]\np)/pp[prep=by] : \ x . \ y . go x y <52353, 1.0>
went | iv2-to :: (s[type=decl]\np)/pp[prep=to] : \ x . \ y . go x y <429973, 1.0>
we | pro :: np[agr=1,count=pl] : we <930651, 1.0>
we | raisedpro :: s[type=decl]/(s[type=decl]\np[agr=1,count=pl]) : \ p . p we <296591, 1.0>
were | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <946468, 1.0>
were | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <184592, 1.0>
were | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . y x <655765, 1.0>
were | copv> :: s[type=decl]\np : \ x . x <631978, 1.0>
wet | iv2> :: s[type=decl]\np : \ x . wet x <919798, 1.0>
what | interj :: s[type=q]/np[agr=?x,count=?x] : \ x . q what x <487980, 1.0>
what | np :: np : what <536513, 1.0>
what | q :: s[type=q]/(s[type=decl]/np) : \ x . q what x <792643, 1.0>
what | qw :: s[type=q] : q what <661372, 1.0>
what | qw :: s : what <421357, 1.0>
what | raisedpro :: s[type=decl]/(s[type=decl]\np[agr=1,count=sg]) : \ p . p what <930143, 1.0>
where | q :: s[type=q]/(s[type=decl]/pp) : \ x . q place x <746172, 1.0>
which | adj :: np/^np : \ x . which x <561544, 1.0>
which | q :: (s[type=q]/(s[type=decl]/np))/np : \ x . \ y . q which x y <99662, 1.0>
while | conj :: s[type=decl]/^s : \ x . while x <622330, 1.0>
whistle | iv> :: s[type=decl]\np : \ x . whistle x <227671, 1.0>
whistle | s :: s : whistle <761216, 1.0>
white | predp :: predp : white <446074, 1.0>
whole | adj :: np/^np : \ x . whole x <63453, 1.0>
who | np :: np : who <882084, 1.0>
who | q :: s[type=q]/(s[type=decl]\np) : \ x . q who x <416949, 1.0>
who | q :: s[type=q]/(s[type=decl]/np) : \ x . q who x <486945, 1.0>
who | qw :: s : q who <460083, 1.0>
whose | pro :: np/np : \ x . whose x <379475, 1.0>
whose | q :: s[type=q]/(s[type=decl]/np) : \ x . q whose x <104166, 1.0>
wiener | np :: np[agr=3,count=sg] : wiener <447198, 1.0>
will | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . x <276861, 1.0>
will | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . x y <642890, 1.0>
will | aux :: (s[type=decl]/(s[type=decl]\np))/^np : \ x . \ y . y x <988161, 1.0>
window | np :: np[agr=3,count=sg] : window <39473, 1.0>
wipe | tv-off> :: ((s[type=decl]\np)/pp[prep=off])/np : \ x . \ y . \ z . wipe x y z <352413, 1.0>
wipe | tv> :: (s[type=decl]\np)/np : \ x . \ y . wipe x y <432345, 1.0>
wise | adj :: np/^np : \ x . wise x <862549, 1.0>
with | pre :: pp[prep=with]/np : \ x . with x <7845, 1.0>
with | pre :: ((s[type=decl]\np)\(s[type=decl]\np))/np : \ x . \ y . \ z . y (with x) z <29561, 1.0>
woke | iv2-up> :: (s[type=decl]\np)/pp[prep=up] : \ x . \ y . wake x y <485364, 1.0>
wonderful | predp :: predp : wonderful <212535, 1.0>
word | np :: np[agr=3,count=sg] : word <446862, 1.0>
words | pln :: np[agr=3,count=pl] : pl word <493093, 1.0>
working | iving> :: s[type=decl]\np : \ x . work x <817691, 1.0>
working | tv-at :: (s[type=decl]\np)/pp[prep=at] : \ x . \ y . work x y <974862, 1.0>
work | iv> :: s[type=decl]\np : \ x . work x <952350, 1.0>
works | ivs> :: s[type=decl]\np[agr=3,count=sg] : \ x . work x <683506, 1.0>
worry | iv-about> :: (s[type=decl]\np)/pp[prep=about] : \ x . \ y . worry x y <87005, 1.0>
would | aux :: (s[type=decl]/np)/^(s[type=decl]/np) : \ x . would x <68325, 1.0>
would | aux :: (s[type=decl]\np)/^(s[type=decl]\np) : \ x . \ y . would (x y) <503468, 1.0>
would | aux :: (s[type=decl]/^(s[type=decl]\np))/^np : \ x . \ y . would (y x) <806770, 1.0>
write | dv> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . write x y z <73222, 1.0>
write | tv> :: (s[type=decl]\np)/np : \ x . \ y . write x y <29523, 1.0>
writing | tving-on> :: (s[type=decl]\np)/pp[prep=on] : \ x . \ y . write x y <421349, 1.0>
writing | tving> :: (s[type=decl]\np)/np : \ x . \ y . write x y <714140, 1.0>
wrong | predp :: predp : wrong <253175, 1.0>
wrote | dv2> :: ((s[type=decl]\np)/np)/np : \ x . \ y . \ z . write x y z <191688, 1.0>
x | np :: np[agr=3] : x <852364, 1.0>
year | np :: np[agr=3,count=sg] : year <252201, 1.0>
yellow | adj :: np/^np : \ x . yellow x <703845, 1.0>
yes | np :: np[agr=3,count=sg] : yes <548807, 1.0>
yesterday | adv :: s[type=decl]\^s : \ x . x yesterday <161208, 1.0>
yesterday | np :: np : yesterday <264376, 1.0>
yet | adv :: (s[type=decl]\np)\^(s[type=decl]\np) : \ x . \ y . x yet y <409379, 1.0>
yet | adv :: @x\@x : \ x . x yet <944560, 1.0>
yet | expr :: s : yet <733895, 1.0>
you | pro :: np[agr=2] : you <50603, 1.0>
you | raisedpro :: s[type=decl]/(s[type=decl]\np[agr=2]) : \ p . p you <674776, 1.0>
your | det :: np[agr=?y,count=?z]/np[agr=?y,count=?z] : \ x . your x <660797, 1.0>
your | det :: (s[type=decl]/(s[type=decl]\np))/np : \ x . \ p . p (your x) <534141, 1.0>
yourself | pro :: np[agr=3] : yourself <840984, 1.0>
yours | np :: np[agr=3] : yours <418617, 1.0>
zebra | np :: np[agr=3,count=sg] : zebra <754424, 1.0>
zero | np :: np[agr=3,count=sg] : zero <555307, 1.0>
zwieback | np :: np[agr=3,count=sg] : zwieback <538303, 1.0>
